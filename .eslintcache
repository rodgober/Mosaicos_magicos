[{"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\index.js":"1","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\App.js":"2","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\reportWebVitals.js":"3","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\context\\salas\\salaState.js":"4","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Juegayaprende.js":"5","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\context\\salas\\salaReducer.js":"6","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\context\\salas\\salaContext.js":"7","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\types\\index.js":"8","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Header.js":"9","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Secciones.js":"10","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Almacenes.js":"11","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Horno.js":"12","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Murales.js":"13","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Collages.js":"14","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Programacion.js":"15","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\helper.js":"16","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Almacen.js":"17","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Amosaico.js":"18","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\types\\imgbotones.js":"19","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Colores.js":"20","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Figuras.js":"21","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Mosaico.js":"22","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Variantes.js":"23"},{"size":288,"mtime":1607660916545,"results":"24","hashOfConfig":"25"},{"size":269,"mtime":1608067670081,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":1497,"mtime":1608072050539,"results":"28","hashOfConfig":"25"},{"size":1742,"mtime":1608072576107,"results":"29","hashOfConfig":"25"},{"size":611,"mtime":1608072183000,"results":"30","hashOfConfig":"25"},{"size":109,"mtime":1608072096972,"results":"31","hashOfConfig":"25"},{"size":2132,"mtime":1608068920653,"results":"32","hashOfConfig":"25"},{"size":1806,"mtime":1608072724046,"results":"33","hashOfConfig":"25"},{"size":1186,"mtime":1608072738268,"results":"34","hashOfConfig":"25"},{"size":8227,"mtime":1608072749357,"results":"35","hashOfConfig":"25"},{"size":4110,"mtime":1608072760957,"results":"36","hashOfConfig":"25"},{"size":4347,"mtime":1608072773127,"results":"37","hashOfConfig":"25"},{"size":127,"mtime":1608072784694,"results":"38","hashOfConfig":"25"},{"size":141,"mtime":1608072798376,"results":"39","hashOfConfig":"25"},{"size":2927,"mtime":1608072862499,"results":"40","hashOfConfig":"25"},{"size":4298,"mtime":1608072889250,"results":"41","hashOfConfig":"25"},{"size":3205,"mtime":1608072911291,"results":"42","hashOfConfig":"25"},{"size":11746,"mtime":1608073091053,"results":"43","hashOfConfig":"25"},{"size":8781,"mtime":1608073157739,"results":"44","hashOfConfig":"25"},{"size":9230,"mtime":1608073180910,"results":"45","hashOfConfig":"25"},{"size":10290,"mtime":1608073200498,"results":"46","hashOfConfig":"25"},{"size":15485,"mtime":1608073217587,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"kuyef4",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"50"},"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\index.js",[],["105","106"],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\App.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\reportWebVitals.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\context\\salas\\salaState.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Juegayaprende.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\context\\salas\\salaReducer.js",["107"],"import { SALA_HABILITADA, SET_ALMACEN, SET_MOSSELECCIONADO } from '../../types';\r\n\r\nexport default (state, action) => {\r\n    switch(action.type) {\r\n        case SALA_HABILITADA:\r\n            return{\r\n                ...state,\r\n                sala: action.payload\r\n            }\r\n        case SET_ALMACEN:\r\n            return{\r\n                ...state,\r\n                almacen: action.payload\r\n            }\r\n        case SET_MOSSELECCIONADO:\r\n            return{\r\n                ...state,\r\n                mosSeleccionado: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\context\\salas\\salaContext.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\types\\index.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Header.js",["108"],"import React from 'react';\r\nconst logo = require('./images/LogoMM.png');\r\n\r\nconst Header = () => {\r\n    const handleChange = e => {\r\n        console.log('Seleciono sala');\r\n    }\r\n    return ( \r\n        <header className=\"header\">\r\n            <div className=\"header-contenedor\">\r\n                    <div className=\"logo\">\r\n                        <img\r\n                            src={logo}\r\n                            onClick={handleChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <nav className=\"menu\">\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={handleChange}\r\n                            className=\"presionado\"\r\n                            disabled=\"true\"\r\n                        >Mosaicos  \r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={handleChange}\r\n                            className=\"myButton\"\r\n                        >Murales  \r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={handleChange}\r\n                            className=\"myButton\"\r\n                        >Collages  \r\n                        </button>\r\n                    </nav>\r\n                    <div className=\"configuracion\">\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={handleChange}\r\n                            className=\"myButton\"\r\n                        >Configuraci√≥n  \r\n                        </button>\r\n                    </div>                    \r\n            </div>\r\n        </header>\r\n     );\r\n}\r\n \r\nexport default Header;","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Secciones.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Almacenes.js",["109","110"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport salaContext from '../context/salas/salaContext'\r\n\r\nimport { obtenerXInicialMos, obtenerYInicialMos, obtenerMosXSeleccionado, obtenerXDelMosSeleccionado, obtenerLargoAlmacen, obtenerAltoAlmacen, obtenerNumMosaicosXLargoImagen } from '../helper';\r\n\r\nconst Almacenes = React.forwardRef((props,ref) => {\r\n\r\n    const refInput = React.createRef();\r\n\r\n    const salaContexto = useContext(salaContext);\r\n    const { alto, largo, separacion, almacen, setAlmacen, mosSeleccionado, setMosSeleccionado } = salaContexto;\r\n    const canvasRef = ref;\r\n\r\n    useEffect (()=>{\r\n        if (almacen<=0){\r\n            const canvas = canvasRef.current;\r\n            const ctx = canvas.getContext('2d');\r\n            ctx.fillStyle = 'white';\r\n            ctx.strokeStyle = 'white';            \r\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n            setAlmacen(0);\r\n            setMosSeleccionado(0);\r\n        }\r\n    }, []);\r\n\r\n\r\n    const handleChange = e => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n        let rect = canvas.getBoundingClientRect();\r\n        let x = e.clientX - rect.left; //Obtiene coordenada X donde el usuario dio clic\r\n        let y = e.clientY - rect.top; // Obtiene coordenada Y donde el usuario dio clic\r\n        let numMos = obtenerMosXSeleccionado(x, largo, separacion); //Obtenemos el numero de mosaico seleccionado\r\n        if (numMos !== mosSeleccionado && numMos <= almacen) { //El mosaico debe ser diferente al seleccionado con anterioridad y debe ser menor al tama√±o del almacen\r\n            ctx.strokeStyle = 'white'; //El color blanco del cuadro para borrar la seleccion del mosaico seleccionado con anterioridad\r\n            ctx.lineWidth = 3; //Grosor 3 para borar el marco negrocon grosor 2\r\n            let xx = obtenerXDelMosSeleccionado(mosSeleccionado, largo, separacion); //Obtiene la coordenada X del mosaico seleccionado\r\n            ctx.strokeRect(xx, 0, separacion + largo + separacion, separacion + alto + separacion); // imprime el marco blanco\r\n            ctx.strokeStyle = 'black'; //Coloca el color negro para el marco del mosaico seleccionado\r\n            ctx.lineWidth = 2; //El marco de grosor 2 para que pueda ser borrado por el marco blanco\r\n            const xInicialMos = obtenerXInicialMos(x, largo, separacion); //Se obtiene la coordenada X del marco a pintar \r\n            const yInicialMos = obtenerYInicialMos(y, alto, separacion); //Se obtiene la coordenada Y del marco a pintar \r\n            ctx.strokeRect(xInicialMos, yInicialMos, separacion + largo + separacion, separacion + alto + separacion); //Se pinta el marco negro \r\n            setMosSeleccionado(numMos);//Guarda el nuevo mosaico seleccionado   \r\n            }\r\n     \r\n    }\r\n\r\n    const abrirAlmacen = e => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n        ctx.fillStyle = 'white';\r\n        ctx.strokeStyle = 'white';  \r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n        setMosSeleccionado(0);//Ya no hay mosaico seleccionado\r\n    \r\n        const img = new Image();\r\n        const file = e.target.files[0];\r\n        const reader = new FileReader();\r\n      \r\n        reader.addEventListener(\"load\", function () {\r\n          img.src = reader.result;\r\n        }, false);\r\n      \r\n        if (file) {\r\n          reader.readAsDataURL(file);\r\n        }\r\n    \r\n        img.onload = function() {\r\n            let numMos = obtenerNumMosaicosXLargoImagen(img.naturalWidth, largo, separacion);\r\n            setAlmacen(numMos);\r\n          ctx.drawImage(img, 0, 0, img.naturalWidth, img.naturalHeight);\r\n        };\r\n        console.log(img.naturalWidth);\r\n    }\r\n        \r\n\r\n    const eliminartodos = () => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n        ctx.fillStyle = 'white';\r\n        ctx.strokeStyle = 'white';  \r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n        setAlmacen(0);\r\n        setMosSeleccionado(0);//Ya no hay mosaico seleccionado\r\n    }\r\n\r\n    const borrarMos = () => {\r\n        if (mosSeleccionado > 0 && almacen > 0){  //Si existen mosaicos en el almacen y hay alguno seleccionado\r\n            const canvas = canvasRef.current;\r\n            const ctx = canvas.getContext('2d');\r\n            ctx.strokeStyle = 'white'; //El color blanco del cuadro para borrar la seleccion del mosaico seleccionado con anterioridad\r\n            ctx.lineWidth = 3; //Grosor 3 para borar el marco negrocon grosor 2\r\n            let xx = obtenerXDelMosSeleccionado(mosSeleccionado, largo, separacion); //Obtiene la coordenada X del mosaico seleccionado\r\n            ctx.strokeRect(xx, 0, separacion + largo + separacion, separacion + alto + separacion); // imprime el marco blanco\r\n            xx = obtenerXDelMosSeleccionado(mosSeleccionado+1, largo, separacion);\r\n            var imgData = ctx.getImageData(xx, 0, canvas.width-xx, canvas.height); //Obtiene la imagen  del canvas del mosaico en TRANSICION   \r\n            xx = obtenerXDelMosSeleccionado(mosSeleccionado, largo, separacion);          \r\n            ctx.putImageData(imgData, xx, 0);\r\n            setAlmacen(almacen -1);\r\n            setMosSeleccionado(0);//Ya no hay mosaico seleccionado\r\n        }\r\n    }\r\n\r\n    const guardar = () => {\r\n        if (almacen > 0){\r\n            const canvas = canvasRef.current;\r\n            if (mosSeleccionado > 0){  //Si existen mosaicos en el almacen y hay alguno seleccionado\r\n                \r\n                const ctx = canvas.getContext('2d');\r\n                ctx.strokeStyle = 'white'; //El color blanco del cuadro para borrar la seleccion del mosaico seleccionado con anterioridad\r\n                ctx.lineWidth = 3; //Grosor 3 para borar el marco negrocon grosor 2\r\n                let xx = obtenerXDelMosSeleccionado(mosSeleccionado, largo, separacion); //Obtiene la coordenada X del mosaico seleccionado\r\n                ctx.strokeRect(xx, 0, separacion + largo + separacion, separacion + alto + separacion); // imprime el marco blanco\r\n                setMosSeleccionado(0);//Ya no hay mosaico seleccionado\r\n            }\r\n            let canvasdwn = document.createElement('canvas'); //Crea el canvas que va a descargar\r\n            canvasdwn.width = obtenerLargoAlmacen(almacen, largo, separacion); //le coloca el largo del canvas dependiendo de los mosaicos\r\n            canvasdwn.height = obtenerAltoAlmacen(alto, separacion);//coloca el alto del canvas\r\n            var destCtx = canvasdwn.getContext('2d');\r\n            destCtx.drawImage(canvas, 0, 0); //Copia la imagen del canvas del almacen al canvas que va a descargar con el tama√±o m√≠nimo necesario\r\n            let downloadLink = document.createElement('a');\r\n            downloadLink.setAttribute('download', 'almacen.png');\r\n            let dataURL = canvasdwn.toDataURL('image/png');\r\n            let url = dataURL.replace(/^data:image\\/png/,'data:application/octet-stream');\r\n            downloadLink.setAttribute('href',url);\r\n            downloadLink.click();\r\n        }\r\n\r\n    }\r\n\r\n    return ( \r\n        <div>\r\n            <div>\r\n                <p>Almacen</p>\r\n                <canvas\r\n                    ref={ref}\r\n                    id='canv'\r\n                    width='1000'\r\n                    height={separacion + largo + separacion}\r\n                    onClick={handleChange}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n\r\n                <input type=\"file\" id=\"fileUpload\" \r\n                    onChange={abrirAlmacen}\r\n                    ref={refInput}/>\r\n \r\n\r\n                <button \r\n                    type=\"button\"\r\n                    onClick={guardar}\r\n                >Guardar\r\n                </button>\r\n\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={ () => borrarMos() }                \r\n                >Eliminar 1</button>\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={ () => eliminartodos() }                \r\n                >Eliminar todos</button>\r\n\r\n            </div>\r\n        </div> \r\n     );\r\n});\r\n \r\nexport default Almacenes;","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Horno.js",["111"],"import React, {Fragment, useState, useContext } from 'react';\r\nimport Mosaico from './Mosaico';\r\nimport Figuras from './Figuras';\r\nimport Variantes from './Variantes';\r\nimport Colores from './Colores';\r\nimport Almacen from './Almacen';\r\nimport Amosaico from './Amosaico';\r\nimport salaContext from '../context/salas/salaContext'\r\n\r\nconst Horno = React.forwardRef((props, ref) => {\r\n\r\n    const salaContexto = useContext(salaContext);\r\n    const { alto, largo, separacion, almacen, setAlmacen } = salaContexto;\r\n\r\n    const [figura, setFigura] = useState(0); //Establece el tipo de figura seleccionada\r\n    const [variante, setVariante] = useState(0); //Establece la variante de la figura seleccionada\r\n    const [color, setColor] = useState(0);   //Establece el color de la figura seleccionada\r\n    const [pintar, setPintar] = useState(false);\r\n    const [estampar, setEstampar] = useState(false); //Indica si el mosaico est√° listo para Estampar\r\n    const [animacion, setAnimacion] = useState(false); //Indica que debe iniciar y finalizar la animacion\r\n\r\n    const canvasMos = React.createRef(); // Crea la referencia del mosaico que pinta arriba en el horno\r\n    const canvasTrans = React.createRef(); //Crea la referencia del mosaico que se mueve en el horno\r\n\r\n    const canvasAlmacenes = ref; //Toma la referencia del almacen\r\n\r\n    const handleChange = e => { \r\n\r\n        const canvas1 = canvasMos.current;  //Asigna la referencia del mosaico de arriba del horno\r\n        const canvas2 = canvasTrans.current;//Asigna la refrencia del mosaico que se mueve\r\n        const ctxM1 = canvas1.getContext('2d');\r\n        const ctxM2 = canvas2.getContext('2d');\r\n\r\n        ctxM2.drawImage(canvas1, 0, 0); //Dibuja el mosaico que se mueve\r\n        ctxM1.clearRect(0, 0, largo, alto);  //Limpia el mosaico de arriba para crear un nuevo mosaico\r\n\r\n        \r\n\r\n        ///////////////////////////////////////////////////\r\n        //     Copiar al almacen\r\n        ///////////////////////////////////////////////////\r\n        const canvas4 = canvasAlmacenes.current; //\r\n        const ctxAlmacenes = canvas4.getContext('2d'); //\r\n        var imgData = ctxM2.getImageData(0, 0, largo, alto); //Obtiene la imagen  del canvas del mosaico en TRANSICION    \r\n        var x =  ((separacion + largo + separacion)*almacen)+separacion; // Calcula x en el cual se estampar√° el mosaico en el almacen\r\n\r\n        ctxAlmacenes.putImageData(imgData, x, 0 + separacion); //Estampa el mosaico en el almac√©n //\r\n\r\n        setAlmacen(almacen + 1); //Incrementa el almacen\r\n        setEstampar(false); //Indica que ya no  puede volver a estampar hasta completar nuevamente el ciclo (figura, variante, color)\r\n        setAnimacion(true);\r\n      }\r\n\r\n    return ( \r\n        <Fragment>\r\n            <Figuras\r\n                figura={figura}\r\n                setFigura={setFigura}\r\n            />\r\n\r\n            <Variantes\r\n                figura={figura}\r\n                variante={variante}\r\n                setVariante={setVariante}\r\n            />\r\n\r\n            <Colores\r\n                figura={figura}\r\n                variante={variante}\r\n                color={color}\r\n                setColor={setColor}\r\n                setPintar={setPintar}\r\n                setEstampar={setEstampar}\r\n                setFigura={setFigura}\r\n            />\r\n\r\n            <Mosaico\r\n                figura={figura}\r\n                variante={variante}\r\n                color={color}\r\n                pintar={pintar}\r\n                setPintar={setPintar}\r\n                setFigura={setFigura}\r\n                setVariante={setVariante}                \r\n                ref={canvasMos}\r\n            />\r\n\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={handleChange}\r\n                    disabled={!estampar}\r\n                >Estampar  \r\n                 </button>\r\n\r\n            \r\n\r\n            <Amosaico\r\n                animacion={animacion}\r\n                setAnimacion={setAnimacion}\r\n                ref={canvasTrans}\r\n            />\r\n\r\n        </Fragment>\r\n\r\n     );\r\n});\r\n \r\nexport default Horno;","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Murales.js",["112","113","114"],"import React, { useEffect, useContext } from 'react';\r\nimport salaContext from '../context/salas/salaContext'\r\nimport { obtenerXDelMosSeleccionado, obtenerMosXSeleccionadoMu, obtenerXDelMosSeleccionadoMu, obtenerMosYSeleccionadoMu, obtenerYDelMosSeleccionadoMu } from '../helper';\r\n\r\nconst Murales = React.forwardRef((props,ref) => {\r\n\r\n    const salaContexto = useContext(salaContext);\r\n    const { alto, largo, separacion, almacen, mosSeleccionado, setMosSeleccionado } = salaContexto;\r\n    const canvasAlmacenes = ref;  // Toma la referencia del canvas del Almacen que se pasa por par√°metro en la llamada del componente\r\n    const canvasMural = React.createRef(); //Crea la referencia del canvas del Mural donde se pegan los mosaicos\r\n\r\n    \r\n\r\n    const handleChange = e => {\r\n        const canvasAlm = canvasAlmacenes.current; //El current del Almacen\r\n        const canvasMu = canvasMural.current;       //El current del Mural\r\n        const ctxAlm = canvasAlm.getContext('2d');  //Crea el contexto donde tomar√° el mosaico seleccionado\r\n        const ctxMural = canvasMu.getContext('2d'); //Crea el contexto donde pintar√° el mosaico seleccionado\r\n        let xx = obtenerXDelMosSeleccionado(mosSeleccionado, largo, separacion); //Obtiene la coordenada X del mosaico seleccionado\r\n        var imgMosaico = ctxAlm.getImageData(xx + separacion, separacion, largo, alto);//Toma el mosaico del almacen\r\n        let rect = canvasMu.getBoundingClientRect();\r\n        let x = e.clientX - rect.left; //Obtiene coordenada X donde el usuario dio clic\r\n        let y = e.clientY - rect.top; // Obtiene coordenada Y donde el usuario dio clic\r\n        let numMosX = obtenerMosXSeleccionadoMu(x, largo, separacion); //Obtenemos el numero de mosaico seleccionado\r\n        xx = obtenerXDelMosSeleccionadoMu(numMosX, largo, separacion); //Obtiene la coordenada X del mosaico seleccionado\r\n        let numMosY = obtenerMosYSeleccionadoMu(y, alto, separacion); //Obtenemos el numero de mosaico seleccionado\r\n        console.log('Mosaico seleccionado en Y: ', numMosY);\r\n        let yy = obtenerYDelMosSeleccionadoMu(numMosY, alto, separacion); //Obtiene la coordenada X del mosaico seleccionado\r\n        ctxMural.putImageData(imgMosaico, xx+1 , yy+1); //Estampa el mosaico en el Mural\r\n        let dataImg = canvasMu.toDataURL(); //convierte la imagen a una cadena base 64\r\n        localStorage.setItem('mural', dataImg); //guarda la cadena en base 64 en el Local Storage\r\n    }\r\n\r\n    function limpiaMuralBtn(){\r\n        const canvasMu = canvasMural.current;       //El current del Mural\r\n        const ctxMural = canvasMu.getContext('2d');\r\n        limpiaMural(ctxMural);\r\n    }\r\n\r\n    function limpiaMural(ctx){\r\n        ctx.fillStyle = 'black';\r\n        ctx.fillRect(0, 0, (12*largo)+13, (8*largo)+9);\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = 'white';\r\n     //   ctx.rect(0, 0, (12*largo)+13, (8*largo)+9);\r\n        for (let xx = 0; xx < 12; xx++) {\r\n            ctx.moveTo((alto * xx)+xx,0);\r\n            ctx.lineTo((alto * xx)+xx, (8*alto)+9);\r\n            ctx.stroke();\r\n        }\r\n        for (let xx = 0; xx < 8; xx++) {\r\n            ctx.moveTo(0,(largo * xx)+xx);\r\n            ctx.lineTo((largo * 12 ) + 12,(largo * xx)+xx);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n\r\n    useEffect (()=>{\r\n        const mural1 = localStorage.getItem('mural');\r\n        const canvasMu = canvasMural.current;\r\n        const ctxMural = canvasMu.getContext('2d'); //Crea el contexto donde pintar√° el mosaico seleccionado    \r\n        if(mural1 === null){\r\n            limpiaMural(ctxMural);\r\n        }else{\r\n            let img = new Image();\r\n            img.src = mural1;\r\n            ctxMural.restore();\r\n            ctxMural.drawImage(img, 0, 0, canvasMu.width, canvasMu.height);\r\n            img.onload = function() {\r\n                ctxMural.drawImage(img, 0, 0, canvasMu.width, canvasMu.height);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n\r\n    return ( \r\n        <div>\r\n            <canvas\r\n                ref={canvasMural}\r\n                width={(12*largo)+13}\r\n                height={(8*largo)+9}\r\n                onClick={handleChange}\r\n            />\r\n        <button\r\n            type=\"button\"\r\n            onClick={ () => limpiaMuralBtn() } \r\n        >Limpiar mural</button>\r\n        </div>\r\n    );\r\n});\r\n \r\nexport default Murales;","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Collages.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Programacion.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\helper.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Almacen.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Amosaico.js",["115","116","117","118"],"import React, { useContext, Fragment, useEffect } from 'react';\r\nimport salaContext from '../context/salas/salaContext'\r\nimport styles from './Amosaico.module.css';\r\nimport { horno1, horno2, horno3 } from '../types/imgbotones';\r\n\r\nconst fuente1 = horno1;\r\nconst fuente2 = horno2;\r\nconst fuente3 = horno3;\r\n\r\nconst Amosaico = React.forwardRef((props, ref) => {\r\n\r\n    let {animacion, setAnimacion} = props;\r\n\r\n\r\n    const salaContexto = useContext(salaContext);\r\n    const { alto, largo } = salaContexto;\r\n\r\n\r\n      useEffect(() => {\r\n        if(animacion){\r\n            const interval = setInterval(() => {\r\n                console.log('Interval triggered');\r\n                setAnimacion(false);\r\n                console.log('cambiaron el state de animacion');\r\n              }, 5000);\r\n              return () => clearInterval(interval);\r\n        }\r\n        \r\n\r\n      }, [animacion]);\r\n\r\n\r\n\r\n    return ( \r\n        <Fragment>\r\n            <div className=\"relative\" >\r\n                <div \r\n                    className={animacion ? `${styles.mosaicotran}` : `${styles.mosaicotran1}`}\r\n                >\r\n                    <canvas\r\n                        ref={ref}\r\n                        width={alto}\r\n                        height={largo}\r\n                    />\r\n                </div>\r\n\r\n                <div className={`${styles.horno}`} >\r\n\r\n                    <img className= {animacion ? `${styles.cfimg}` :  `${styles.cfimg}`} \r\n                        src={fuente1}\r\n                    />\r\n\r\n                    <img className={animacion ? `${styles.cfimg}` : `${styles.ocultar}`} \r\n                        src={fuente2}\r\n                                />\r\n                    <img className={animacion ? `${styles.cftop}` : `${styles.ocultar}`} \r\n                        src={fuente3}\r\n                                />\r\n                </div>\r\n            </div>\r\n      </Fragment>\r\n     );\r\n});\r\n \r\nexport default Amosaico;\r\n\r\n\r\n    //////\r\n    //PRUEBAS ANIMACI√ìN Contador que si funciona//\r\n    /////\r\n    /*\r\n    \r\n    const [count, setCount] = React.useState(0)\r\n    const useAnimationFrame = callback => {\r\n        // Use useRef for mutable variables that we want to persist\r\n        // without triggering a re-render on their change\r\n        const requestRef = React.useRef();\r\n        const previousTimeRef = React.useRef();\r\n        \r\n        const animate = time => {\r\n          if (previousTimeRef.current != undefined) {\r\n            const deltaTime = time - previousTimeRef.current;\r\n            callback(deltaTime)\r\n          }\r\n          previousTimeRef.current = time;\r\n          requestRef.current = requestAnimationFrame(animate);\r\n        }\r\n        \r\n        React.useEffect(() => {\r\n          requestRef.current = requestAnimationFrame(animate);\r\n          return () => cancelAnimationFrame(requestRef.current);\r\n        }, []); // Make sure the effect runs only once\r\n      }\r\n\r\n    const [count, setCount] = React.useState(0)\r\n  \r\n    useAnimationFrame(deltaTime => {\r\n      // Pass on a function to the setter of the state\r\n      // to make sure we always have the latest state\r\n      setCount(prevCount => (prevCount + deltaTime * 0.01) % 100)\r\n    })\r\n*/","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\types\\imgbotones.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Colores.js",["119","120","121","122","123","124","125","126","127","128","129"],"import React, { useEffect } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { rojoUp, rojoOver, amaUp, amaOver, verdeUp, verdeOver, azClaroUp, azClaroOver, azFuerteUp, azFuerteOver, fucUp, fucOver, grisUp, \r\n    grisOver,narUp,narOver,negUp,negOver,blaUp,blaOver,btnDis } from '../types';\r\n\r\n\r\n\r\nconst ContenedorColores = styled.div`\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n`;\r\n\r\nconst BotonColores = styled.button`\r\n    cursor:pointer;\r\n    border:none;\r\n    flex-grow: 1;\r\n    flex-basis: auto; //1 grow, 2 shrink, 3 basis \r\n    padding: 0px;\r\n`;\r\n\r\nconst Colores = ({figura, variante, color, setColor, pintar, setPintar, setEstampar, setFigura, btnCol1, btnCol2, btnCol3, btnCol4, btnCol5, btnCol6, btnCol7, btnCol8, btnCol9, btnCol10}) => {\r\n    \r\n    btnCol1 = React.createRef();\r\n    btnCol2 = React.createRef();\r\n    btnCol3 = React.createRef();\r\n    btnCol4 = React.createRef();\r\n    btnCol5 = React.createRef();\r\n    btnCol6 = React.createRef();\r\n    btnCol7 = React.createRef();\r\n    btnCol8 = React.createRef();\r\n    btnCol9 = React.createRef();\r\n    btnCol10 = React.createRef();   \r\n\r\n    const imgList = [btnDis, rojoUp, rojoOver, amaUp, amaOver, verdeUp, verdeOver, azClaroUp, azClaroOver, azFuerteUp, azFuerteOver, \r\n        fucUp, fucOver, grisUp, grisOver, narUp, narOver, negUp, negOver, blaUp, blaOver];\r\n        let inRojoUp = 0;\r\n        let inRojoOver = 0;\r\n        let inAmaUp = 0;\r\n        let inAmaOver = 0;\r\n        let inVerdeUp = 0;\r\n        let inVerdeOver = 0;\r\n        let inAzClaroUp = 0;\r\n        let inAzClaroOver = 0;\r\n        let inAzulFUp = 0;\r\n        let inAzulFOver = 0;\r\n        let inFucUp = 0;\r\n        let inFucOver = 0;\r\n        let inGrisUp = 0;\r\n        let inGrisOver = 0;\r\n        let inNarUp = 0;\r\n        let inNarOver = 0;\r\n        let inNegroUp = 0;\r\n        let inNegroOver = 0;\r\n        let inBlanUp = 0;\r\n        let inBlanOver = 0;         \r\n\r\n    //Funcion que pone en el STATE el COLOR presionado\r\n    const handleChange = e => {\r\n        //Actualizar el STATE\r\n        setColor(Number(e.target.id));\r\n        setPintar(true);\r\n        setEstampar(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(variante > 0){\r\n            habilitarColores();\r\n        }else{\r\n            iniciarColores();\r\n        }\r\n    }, [variante]);\r\n\r\n    function habilitarColores(){\r\n        inRojoUp = 1;\r\n        inRojoOver = 2;\r\n        inAmaUp = 3;\r\n        inAmaOver = 4;\r\n        inVerdeUp = 5;\r\n        inVerdeOver = 6;\r\n        inAzClaroUp = 7;\r\n        inAzClaroOver = 8;\r\n        inAzulFUp = 9;\r\n        inAzulFOver = 10;\r\n        inFucUp = 11;\r\n        inFucOver = 12;\r\n        inGrisUp = 13;\r\n        inGrisOver = 14;\r\n        inNarUp = 15;\r\n        inNarOver = 16;\r\n        inNegroUp = 17;\r\n        inNegroOver = 18;\r\n        inBlanUp = 19;\r\n        inBlanOver = 20;   \r\n        btnCol1.current.src = imgList[inRojoUp];\r\n        btnCol2.current.src = imgList[inAmaUp];\r\n        btnCol3.current.src = imgList[inVerdeUp];\r\n        btnCol4.current.src = imgList[inAzClaroUp];\r\n        btnCol5.current.src = imgList[inAzulFUp];\r\n        btnCol6.current.src = imgList[inFucUp];\r\n        btnCol7.current.src = imgList[inGrisUp];\r\n        btnCol8.current.src = imgList[inNarUp];\r\n        btnCol9.current.src = imgList[inNegroUp];\r\n        btnCol10.current.src = imgList[inBlanUp];\r\n\r\n    }\r\n\r\n    function iniciarColores(){\r\n        inRojoUp = 0;\r\n        inRojoOver = 0;\r\n        inAmaUp = inAmaOver = inVerdeUp = inVerdeOver = inAzClaroUp = inAzClaroOver = inAzulFUp = inAzulFOver = inFucUp = inFucOver = inGrisUp = inGrisOver = inNarUp = inNarOver = inNegroUp =inNegroOver = inBlanUp = inBlanOver = 0;   \r\n        btnCol1.current.src = imgList[0];\r\n        btnCol2.current.src = imgList[0];\r\n        btnCol3.current.src = imgList[0];\r\n        btnCol4.current.src = imgList[0];\r\n        btnCol5.current.src = imgList[0];\r\n        btnCol6.current.src = imgList[0];\r\n        btnCol7.current.src = imgList[0];\r\n        btnCol8.current.src = imgList[0];\r\n        btnCol9.current.src = imgList[0];\r\n        btnCol10.current.src = imgList[0];        \r\n\r\n    }\r\n\r\n    return ( \r\n        <ContenedorColores>\r\n            <BotonColores>\r\n                <img \r\n                    id=\"21\"\r\n                    key=\"21\"\r\n                    src={imgList[inRojoUp]}\r\n                    onClick={handleChange} \r\n                    onMouseOver={e => (e.currentTarget.src = imgList[inRojoOver])}\r\n                    onMouseLeave={e => (e.currentTarget.src = imgList[inRojoUp])}\r\n                    ref={btnCol1}\r\n                />\r\n            </BotonColores>\r\n\r\n            <BotonColores>\r\n                <img \r\n                    id=\"22\"\r\n                    key=\"22\"\r\n                    src={imgList[inAmaUp]}\r\n                    onClick={handleChange} \r\n                    onMouseOver={e => (e.currentTarget.src = imgList[inAmaOver])}\r\n                    onMouseLeave={e => (e.currentTarget.src = imgList[inAmaUp])}\r\n                    ref={btnCol2}\r\n                />\r\n            </BotonColores>\r\n\r\n            <BotonColores>\r\n                <img \r\n                    id=\"23\"\r\n                    key=\"23\"\r\n                    src={imgList[inVerdeUp]}\r\n                    onClick={handleChange} \r\n                    onMouseOver={e => (e.currentTarget.src = imgList[inVerdeOver])}\r\n                    onMouseLeave={e => (e.currentTarget.src = imgList[inVerdeUp])}\r\n                    ref={btnCol3}\r\n                />\r\n            </BotonColores>\r\n\r\n            <BotonColores>\r\n                <img \r\n                    id=\"24\"\r\n                    key=\"24\"\r\n                    src={imgList[inAzClaroUp]}\r\n                    onClick={handleChange} \r\n                    onMouseOver={e => (e.currentTarget.src = imgList[inAzClaroOver])}\r\n                    onMouseLeave={e => (e.currentTarget.src = imgList[inAzClaroUp])}\r\n                    ref={btnCol4}\r\n                />\r\n            </BotonColores>\r\n\r\n            <BotonColores>\r\n                <img \r\n                    id=\"25\"\r\n                    key=\"25\"\r\n                    src={imgList[inAzulFUp]}\r\n                    onClick={handleChange} \r\n                    onMouseOver={e => (e.currentTarget.src = imgList[inAzulFOver])}\r\n                    onMouseLeave={e => (e.currentTarget.src = imgList[inAzulFUp])}\r\n                    ref={btnCol5}\r\n                />\r\n            </BotonColores>\r\n\r\n\r\n            <BotonColores>\r\n                <img \r\n                    id=\"26\"\r\n                    key=\"26\"\r\n                    src={imgList[inFucUp]}\r\n                    onClick={handleChange} \r\n                    onMouseOver={e => (e.currentTarget.src = imgList[inFucOver])}\r\n                    onMouseLeave={e => (e.currentTarget.src = imgList[inFucUp])}\r\n                    ref={btnCol6}\r\n                />\r\n            </BotonColores>\r\n\r\n            <BotonColores>\r\n                <img \r\n                    id=\"27\"\r\n                    key=\"27\"\r\n                    src={imgList[inGrisUp]}\r\n                    onClick={handleChange} \r\n                    onMouseOver={e => (e.currentTarget.src = imgList[inGrisOver])}\r\n                    onMouseLeave={e => (e.currentTarget.src = imgList[inGrisUp])}\r\n                    ref={btnCol7}\r\n                />\r\n            </BotonColores>   \r\n\r\n            <BotonColores>\r\n                <img \r\n                    id=\"28\"\r\n                    key=\"28\"\r\n                    src={imgList[inNarUp]}\r\n                    onClick={handleChange} \r\n                    onMouseOver={e => (e.currentTarget.src = imgList[inNarOver])}\r\n                    onMouseLeave={e => (e.currentTarget.src = imgList[inNarUp])}\r\n                    ref={btnCol8}\r\n                />\r\n            </BotonColores>\r\n\r\n            <BotonColores>\r\n                <img \r\n                    id=\"29\"\r\n                    key=\"29\"\r\n                    src={imgList[inNegroUp]}\r\n                    onClick={handleChange} \r\n                    onMouseOver={e => (e.currentTarget.src = imgList[inNegroOver])}\r\n                    onMouseLeave={e => (e.currentTarget.src = imgList[inNegroUp])}\r\n                    ref={btnCol9}\r\n                />\r\n            </BotonColores>\r\n\r\n            <BotonColores>\r\n                <img \r\n                    id=\"30\"\r\n                    key=\"30\"\r\n                    src={imgList[inBlanUp]}\r\n                    onClick={handleChange} \r\n                    onMouseOver={e => (e.currentTarget.src = imgList[inBlanOver])}\r\n                    onMouseLeave={e => (e.currentTarget.src = imgList[inBlanUp])}\r\n                    ref={btnCol10}\r\n                />\r\n            </BotonColores>\r\n\r\n        </ContenedorColores>\r\n     );\r\n}\r\n \r\nexport default Colores;","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Figuras.js",["130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152"],"import React, {useState, useEffect} from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst circUp = require('./images/botones/figuras/btnCirculoUp.jpg');\r\nconst circOver = require('./images/botones/figuras/btnCirculoOver.jpg');\r\nconst circDis = require('./images/botones/figuras/btnCirculoDis.jpg');\r\nconst cuadUp = require('./images/botones/figuras/btnCuaUp.jpg');\r\nconst cuadOver = require('./images/botones/figuras/btnCuaOver.jpg');\r\nconst cuadDis = require('./images/botones/figuras/btnCuaDis.jpg');\r\nconst triaUp = require('./images/botones/figuras/btnTrianUp.jpg');\r\nconst triaOver = require('./images/botones/figuras/btnTrianOver.jpg');\r\nconst triaDis = require('./images/botones/figuras/btnTrianDis.jpg');\r\nconst romboUp = require('./images/botones/figuras/btnRomboUp.jpg');\r\nconst romboOver = require('./images/botones/figuras/btnRomboOver.jpg');\r\nconst romboDis = require('./images/botones/figuras/btnRomboDis.jpg');\r\nconst hexaUp = require('./images/botones/figuras/btnHexaUp.jpg');\r\nconst hexaOver = require('./images/botones/figuras/btnHexaOver.jpg');\r\nconst hexaDis = require('./images/botones/figuras/btnHexaDis.jpg');\r\nconst lineaUp = require('./images/botones/figuras/btnLineaUp.jpg');\r\nconst lineaOver = require('./images/botones/figuras/btnLineaOver.jpg');\r\nconst lineaDis = require('./images/botones/figuras/btnLineaDis.jpg');\r\nconst btnDis = require('./images/botones/figuras/btnDis.jpg');\r\n\r\n\r\nconst ContenedorFiguras = styled.div`\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n`;\r\nconst BotonFiguras = styled.button`\r\n    cursor:pointer;\r\n    border:none;\r\n    flex-grow: 1;\r\n    flex-basis: auto; //1 grow, 2 shrink, 3 basis \r\n    padding: 0px;\r\n`;\r\n\r\nconst Figuras = ({figura, setFigura, btnCirc, btnCuad, btnTria, btnRombo, btnHexa, btnLinea}) => {\r\n\r\n    btnCirc = React.createRef();\r\n    btnCuad = React.createRef();\r\n    btnTria = React.createRef();\r\n    btnRombo = React.createRef();\r\n    btnHexa = React.createRef();\r\n    btnLinea = React.createRef();\r\n\r\n    const imgList = [circUp, circOver, circDis, cuadUp, cuadOver, cuadDis, triaUp, triaOver, triaDis, romboUp, romboOver, romboDis, hexaUp, hexaOver, hexaDis, lineaUp, lineaOver, lineaDis];\r\n    let inCircUp = 0;\r\n    let inCircOver = 1;\r\n    let inCuadUp = 3;\r\n    let inCuadOver = 4;\r\n    let inTriaUp = 6;\r\n    let inTriaOver = 7;\r\n    let inRomboUp = 9;\r\n    let inRomboOver = 10;\r\n    let inHexadUp = 12;\r\n    let inHexadOver = 13;\r\n    let inLineaUp = 15;\r\n    let inLineaOver = 16;\r\n    console.log('inicia las imagenes de las figuras');\r\n\r\n//Cuando ya seleccion√≥ una figura, cambia las imagenes y deshabilita los botones\r\n    useEffect(() => {\r\n        if (figura === 0){\r\n            inCircUp = 0;\r\n            inCircOver = 1;\r\n            inCuadUp = 3;\r\n            inCuadOver = 4;\r\n            inTriaUp = 6;\r\n            inTriaOver = 7;\r\n            inRomboUp = 9;\r\n            inRomboOver = 10;\r\n            inHexadUp = 12;\r\n            inHexadOver = 13;\r\n            inLineaUp = 15;\r\n            inLineaOver = 16;\r\n            btnCirc.current.src = circUp;\r\n            btnCuad.current.src = cuadUp;\r\n            btnTria.current.src = triaUp;\r\n            btnRombo.current.src = romboUp;\r\n            btnHexa.current.src = hexaUp;\r\n            btnLinea.current.src = lineaUp;             \r\n        }else{\r\n            inCircUp = 2;\r\n            inCircOver = 2;\r\n            inCuadUp = 5;\r\n            inCuadOver = 5;\r\n            inTriaUp = 8;\r\n            inTriaOver = 8;\r\n            inRomboUp = 11;\r\n            inRomboOver = 11;\r\n            inHexadUp = 14;\r\n            inHexadOver = 14;\r\n            inLineaUp = 17;\r\n            inLineaOver = 17;\r\n            btnCirc.current.src = circDis;\r\n            btnCuad.current.src = cuadDis;\r\n            btnTria.current.src = triaDis;\r\n            btnRombo.current.src = romboDis;\r\n            btnHexa.current.src = hexaDis;\r\n            btnLinea.current.src = lineaDis;\r\n            switch (figura) {\r\n                case 1:\r\n                    btnCirc.current.src = circUp;\r\n                    inCircUp = 0;\r\n                    inCircOver = 1;\r\n                    break;\r\n                case 2:\r\n                    inCuadUp = 3;\r\n                    inCuadOver = 4;\r\n                    btnCuad.current.src = cuadUp;\r\n                    break;\r\n                case 3:\r\n                    btnTria.current.src = triaUp;\r\n                    inTriaUp = 6;\r\n                    inTriaOver = 7;\r\n                    break;\r\n                case 4:\r\n                    btnRombo.current.src = romboUp;\r\n                    inRomboUp = 9;\r\n                    inRomboOver = 10;\r\n                    break;\r\n                case 5:\r\n                    btnHexa.current.src = hexaUp;\r\n                    inHexadUp = 12;\r\n                    inHexadOver = 13;\r\n                    break;\r\n                case 6:\r\n                    btnLinea.current.src = lineaUp;\r\n                    inLineaUp = 15;\r\n                    inLineaOver = 16;\r\n                    break;                    \r\n                default:\r\n                    btnCirc.current.src = circUp;\r\n                    inCircUp = 0;\r\n                    inCircOver = 1;\r\n                    break;\r\n            }   \r\n        }\r\n    }, [figura]); \r\n\r\n    //Funcion que pone en el STATE el ID de la figura presionada\r\n    const handleChange = e => {\r\n        if(figura === 0){\r\n            setFigura(Number(e.target.id));\r\n        }\r\n    }\r\n\r\n\r\n    return ( \r\n        <ContenedorFiguras>\r\n            <BotonFiguras\r\n            >\r\n                <img \r\n                    id=\"1\"\r\n                    key=\"1\"\r\n                    src={imgList[inCircUp]}\r\n                    onClick={handleChange} \r\n                    onMouseOver={e => (e.currentTarget.src = imgList[inCircOver])}\r\n                    onMouseLeave={e => (e.currentTarget.src = imgList[inCircUp])}\r\n                    ref={btnCirc}\r\n                />\r\n            </BotonFiguras>\r\n\r\n            <BotonFiguras>\r\n                <img \r\n                    id=\"2\"\r\n                    key=\"2\"\r\n                    src={imgList[inCuadUp]}\r\n                    onClick={handleChange} \r\n                    onMouseOver={e => (e.currentTarget.src = imgList[inCuadOver])}\r\n                    onMouseLeave={e => (e.currentTarget.src = imgList[inCuadUp])}\r\n                    ref={btnCuad}\r\n                />\r\n            </BotonFiguras>\r\n\r\n            <BotonFiguras>\r\n                <img \r\n                    id=\"3\"\r\n                    key=\"3\"\r\n                    src={imgList[inTriaUp]}\r\n                    onClick={handleChange} \r\n                    onMouseOver={e => (e.currentTarget.src = imgList[inTriaOver])}\r\n                    onMouseLeave={e => (e.currentTarget.src = imgList[inTriaUp])}\r\n                    ref={btnTria}\r\n                />                \r\n                  </BotonFiguras>\r\n\r\n            <BotonFiguras>\r\n                <img \r\n                    id=\"4\"\r\n                    key=\"4\"\r\n                    src={imgList[inRomboUp]}\r\n                    onClick={handleChange} \r\n                    onMouseOver={e => (e.currentTarget.src = imgList[inRomboOver])}\r\n                    onMouseLeave={e => (e.currentTarget.src = imgList[inRomboUp])}\r\n                    ref={btnRombo}\r\n                /> \r\n            </BotonFiguras>\r\n\r\n            <BotonFiguras>\r\n                <img \r\n                    id=\"5\"\r\n                    key=\"5\"\r\n                    src={imgList[inHexadUp]}\r\n                    onClick={handleChange} \r\n                    onMouseOver={e => (e.currentTarget.src = imgList[inHexadOver])}\r\n                    onMouseLeave={e => (e.currentTarget.src = imgList[inHexadUp])}\r\n                    ref={btnHexa}\r\n                />\r\n            </BotonFiguras>\r\n\r\n            <BotonFiguras>\r\n                <img \r\n                    id=\"6\"\r\n                    key=\"6\"\r\n                    src={imgList[inLineaUp]}\r\n                    onClick={handleChange} \r\n                    onMouseOver={e => (e.currentTarget.src = imgList[inLineaOver])}\r\n                    onMouseLeave={e => (e.currentTarget.src = imgList[inLineaUp])}\r\n                    ref={btnLinea}\r\n                />\r\n            </BotonFiguras>\r\n\r\n            <BotonFiguras\r\n            disabled >\r\n                <img \r\n                    id=\"7\"\r\n                    key=\"7\"\r\n                    src={btnDis}\r\n                />\r\n            </BotonFiguras>\r\n            <BotonFiguras\r\n            disabled >\r\n                <img \r\n                    id=\"8\"\r\n                    key=\"8\"\r\n                    src={btnDis}\r\n                />\r\n            </BotonFiguras> \r\n            <BotonFiguras\r\n            disabled >\r\n                <img \r\n                    id=\"9\"\r\n                    key=\"9\"\r\n                    src={btnDis}\r\n                />\r\n            </BotonFiguras> \r\n            <BotonFiguras\r\n            disabled >\r\n                <img \r\n                    id=\"10\"\r\n                    key=\"10\"\r\n                    src={btnDis}\r\n                />\r\n            </BotonFiguras>               \r\n\r\n            \r\n        </ContenedorFiguras>\r\n     );\r\n}\r\n \r\nexport default Figuras;","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Mosaico.js",["153"],"import React, {useEffect, useContext } from 'react';\r\nimport salaContext from '../context/salas/salaContext'\r\n\r\nconst Mosaico = React.forwardRef((props, ref) => {\r\n\r\n    const salaContexto = useContext(salaContext);\r\n    const { alto, largo } = salaContexto;\r\n\r\n    const col = ['red', 'yellow', 'green', 'aqua', 'blue', 'fuchsia', 'gray', 'orange', 'black', 'white'];\r\n    let {figura, variante, color, pintar, setPintar, setFigura, setVariante} = props;\r\n\r\n    \r\n\r\n    useEffect(e => {\r\n        if(pintar){\r\n            const canvasRef = ref;\r\n\r\n            const canvas = canvasRef.current;\r\n            const ctx = canvas.getContext('2d');\r\n            ctx.lineWidth = 2;\r\n            ctx.lineCap = 'butt';\r\n            ctx.fill('nonzero');\r\n            ctx.fillStyle = col[color-21];\r\n            ctx.strokeStyle = col[color-21];\r\n\r\n            ctx.beginPath();\r\n\r\n            switch (figura) {\r\n                case 1:\r\n                    fig1(ctx);//Circulo\r\n                    break;\r\n                case 2:\r\n                    fig2(ctx);//Cuadrado\r\n                    break;\r\n                case 3:\r\n                    fig3(ctx);//Triangulo\r\n                    break;\r\n                case 4:\r\n                    fig4(ctx);//Rombo\r\n                    break;\r\n                case 5:\r\n                    fig5(ctx);//Hexagono\r\n                    break;\r\n                case 6:\r\n                    fig6(ctx);//Linea\r\n                    break;\r\n                default:\r\n                    fig1(ctx);//Circulo\r\n                    break;\r\n            }\r\n            superRelleno(ctx);//la peor funci√≥n de mi vida :()\r\n          //  ctx.stroke();\r\n            setPintar(false);\r\n            setFigura(0);\r\n            setVariante(0);\r\n            return;\r\n        }        \r\n    }, [pintar]);\r\n\r\n    function superRelleno(ctx){\r\n        for (let index = 0; index < 30; index++) {\r\n            ctx.fill();   \r\n        }\r\n    }\r\n\r\n    //Manda las coordenadas para imprimir un c√≠rculo dependiendo su variante\r\n    function fig1(ctx){\r\n        switch (variante) {\r\n            case 11:\r\n                circulo(ctx, (largo / 2), (alto / 2), (alto / 2), 0, 2 * Math.PI);\r\n                break;\r\n            case 12:\r\n                circulo(ctx, (largo / 2), (alto / 2), (alto / 4), 0, 2 * Math.PI);\r\n                break;\r\n            case 13:\r\n                circulo(ctx, 0, (alto / 2), (alto / 2), 1.5 * Math.PI, 0.5 * Math.PI);\r\n                break;\r\n            case 14:\r\n                circulo(ctx, largo, (alto / 2), (alto / 2), 0.5 * Math.PI, 1.5 * Math.PI);\r\n                break;\r\n            case 15:\r\n                circulo(ctx, (alto / 2), 0, (alto / 2), 0, Math.PI);\r\n                break;\r\n            case 16:\r\n                circulo(ctx, (alto / 2), largo, (alto / 2), Math.PI, 0);\r\n                break;\r\n            case 17:\r\n                circulo(ctx, 0, alto, (alto / 2), 1.5 * Math.PI, 0);\r\n                break;\r\n            case 18:\r\n                circulo(ctx, 0, 0, (alto / 2), 0, 0.5 * Math.PI);\r\n                break;\r\n            case 19:\r\n                circulo(ctx, largo, 0, (alto / 2), 0.5 * Math.PI, Math.PI);\r\n                break;\r\n            case 20:\r\n                circulo(ctx, largo, largo, (alto / 2), Math.PI, 1.5 * Math.PI);\r\n                break;\r\n            default:\r\n                circulo(ctx, (largo / 2), (alto / 2), (alto / 2), 0, 2 * Math.PI);\r\n                break;\r\n        }\r\n    }\r\n\r\n    //Dibuja un arco con centro en X, Y, con un radio r inicia en i y termina en f\r\n    function circulo(ctx, x, y, r, i, f){\r\n        ctx.moveTo(x, y);\r\n        ctx.arc(x, y, r, i,f);\r\n        ctx.moveTo(x, y);\r\n    }\r\n\r\n    //Manda las coordenadas para imprimir un RECTANGULO dependiendo su variante\r\n    function fig2(ctx) {\r\n        switch (variante) {\r\n            case 11:\r\n                rectangulo(ctx, 0, 0, alto, largo);//X, Y, largo, alto\r\n                break;\r\n            case 12:\r\n                rectangulo(ctx, largo / 4, alto / 4, largo / 2, alto / 2 );\r\n                break;\r\n            case 13:\r\n                rectangulo(ctx, 0, 0, largo / 2, alto);\r\n                break;\r\n            case 14:\r\n                rectangulo(ctx, largo / 2, 0, largo / 2, alto);\r\n                break;\r\n            case 15:\r\n                rectangulo(ctx, 0, 0, largo, alto / 2);\r\n                break;\r\n            case 16:\r\n                rectangulo(ctx, 0, alto / 2, largo, alto / 2);\r\n                break;\r\n            case 17:\r\n                rectangulo(ctx, 0, largo / 2, largo / 2, alto / 2);\r\n                break;\r\n            case 18:\r\n                rectangulo(ctx, 0, 0, largo / 2, alto / 2);\r\n                break;\r\n            case 19:\r\n                rectangulo(ctx, alto / 2, 0, largo / 2, alto / 2);\r\n                break;\r\n            case 20:\r\n                rectangulo(ctx, alto / 2, largo / 2, largo / 2, alto / 2);\r\n                break;\r\n            default:\r\n                rectangulo(ctx, 0, 0, alto, largo);\r\n                break;\r\n        }\r\n    }\r\n\r\n    //Dibuja un rect√°ngulo, toma X, Y y el largo y alto\r\n    function rectangulo (ctx, x, y, largo, alto) {\r\n        ctx.fillRect(x, y, largo, alto); //X, Y, largo, alto\r\n    }\r\n\r\n    //Manda las coordenadas para imprimir un TRINAGULO dependiendo su variante\r\n    function fig3(ctx) {\r\n        switch (variante) {\r\n            case 11:\r\n                triangulo(ctx, [largo / 2, 0], [largo, alto], [0, alto]);//X, Y, largo, alto\r\n                break;\r\n            case 12:\r\n                triangulo(ctx, [0,0],[largo, 0],[alto / 2, largo]);\r\n                break;\r\n            case 13:\r\n                triangulo(ctx, [0,0],[largo / 2, alto / 2], [0, largo]);\r\n                break;\r\n            case 14:\r\n                triangulo(ctx, [largo, 0],[largo, alto],[largo / 2, alto / 2]);\r\n                break;\r\n            case 15:\r\n                triangulo(ctx, [0,0], [largo, 0], [largo / 2, alto / 2]);\r\n                break;\r\n            case 16:\r\n                triangulo(ctx, [largo / 2, alto / 2], [largo, alto], [0, alto]);\r\n                break;\r\n            case 17:\r\n                triangulo(ctx, [0,0], [largo, alto], [0, alto]);\r\n                break;\r\n            case 18:\r\n                triangulo(ctx, [0,0], [largo, 0], [largo, alto]);\r\n                break;\r\n            case 19:\r\n                triangulo(ctx, [largo, 0], [largo, alto], [0, alto]);\r\n                break;\r\n            case 20:\r\n                triangulo(ctx, [0,0],[largo, 0],[0, alto]);\r\n                break;\r\n            default:\r\n                triangulo(ctx, [largo / 2, 0], [largo, alto], [0, alto]);\r\n                break;\r\n        }\r\n    }\r\n\r\n    //Funcion que pitan tri√°ngulos, recibe 3 vertices\r\n    function triangulo (ctx, vertice1, vertice2, vertice3) {\r\n        ctx.moveTo(vertice1[0], vertice1[1]);\r\n        ctx.lineTo(vertice2[0], vertice2[1]);\r\n        ctx.lineTo(vertice3[0], vertice3[1]);\r\n        ctx.lineTo(vertice1[0], vertice1[1]);\r\n\r\n    }\r\n\r\n    //Manda las coordenadas para imprimir un ROMBO dependiendo su variante\r\n    function fig4(ctx) {\r\n        switch (variante) {\r\n            case 11:\r\n                rombo(ctx, [largo / 2, 0],[largo, alto / 2],[largo / 2, alto],[0, alto / 2]);\r\n                break;\r\n            case 12:\r\n                rombo(ctx,  [largo / 2, alto / 4],[(largo / 4)*3, alto / 2],[largo / 2, (alto / 4 )*3],[largo / 4, alto / 2]);\r\n                break;\r\n            default:\r\n                rombo(ctx, [largo / 2, 0],[largo, alto / 2],[largo / 2, alto],[0, alto / 2]);\r\n                break;\r\n        }\r\n    }\r\n\r\n    //Funcion que pitan ROMBOS, recibe 4 vertices\r\n    function rombo (ctx, vertice1, vertice2, vertice3, vertice4) {\r\n        ctx.moveTo(vertice1[0], vertice1[1]);\r\n        ctx.lineTo(vertice2[0], vertice2[1]);\r\n        ctx.lineTo(vertice3[0], vertice3[1]);\r\n        ctx.lineTo(vertice4[0], vertice4[1]);\r\n        ctx.lineTo(vertice1[0], vertice1[1]);\r\n    }\r\n\r\n    //Manda las coordenadas para imprimir un HEX√ÅGONO dependiendo su variante\r\n    function fig5(ctx) {\r\n        switch (variante) {\r\n            case 11:\r\n                hexa(ctx, [largo / 4, 0],[(largo / 4) * 3, 0],[largo, alto / 2],[(largo / 4) * 3, alto],[largo / 4, alto],[0, alto / 2]);\r\n                break;\r\n            case 12:\r\n                hexa(ctx,   [largo / 2, 0],[largo, alto / 4],[largo, (alto / 4)*3],[largo / 2, alto],[0, (alto / 4)*3],[0, alto / 4]);\r\n                break;\r\n            default:    \r\n                hexa(ctx, [largo / 4, 0],[(largo / 4) * 3, 0],[largo, alto / 2],[(largo / 4) * 3, alto],[largo / 4, alto],[0, alto / 2]);\r\n                break;\r\n        }\r\n    }\r\n\r\n    //Funcion que pitan HEXAGONOS, recibe 6 vertices\r\n    function hexa (ctx, vertice1, vertice2, vertice3, vertice4, vertice5, vertice6) {\r\n        ctx.moveTo(vertice1[0], vertice1[1]);\r\n        ctx.lineTo(vertice2[0], vertice2[1]);\r\n        ctx.lineTo(vertice3[0], vertice3[1]);\r\n        ctx.lineTo(vertice4[0], vertice4[1]);\r\n        ctx.lineTo(vertice5[0], vertice5[1]);\r\n        ctx.lineTo(vertice6[0], vertice6[1]);\r\n        ctx.lineTo(vertice1[0], vertice1[1]);\r\n    }\r\n\r\n    //Manda las coordenadas para imprimir una LINEA dependiendo su variante\r\n    function fig6(ctx) {\r\n        switch (variante) {\r\n            case 11:\r\n                linea(ctx, [largo / 2, 0],[largo / 2, alto]);\r\n                break;\r\n            case 12:\r\n                linea(ctx, [0, alto / 2],[largo, alto / 2]);\r\n                break;\r\n            case 13:\r\n                linea(ctx, [0, alto],[largo, 0]);\r\n                break;\r\n            case 14:\r\n                linea(ctx, [0, 0],[largo, alto]);\r\n                break;\r\n            default:    \r\n                linea(ctx, [largo / 2, 0],[largo / 2, alto]);\r\n                break;\r\n        }\r\n        ctx.stroke();\r\n    }\r\n\r\n    //Funcion que pinta Linea\r\n    function linea (ctx, pto1, pto2) {\r\n        ctx.moveTo(pto1[0], pto1[1]);\r\n        ctx.lineTo(pto2[0], pto2[1]);\r\n    }    \r\n\r\n    return ( \r\n        <div>\r\n            <canvas\r\n                ref={ref}\r\n                width={alto}\r\n                height={largo}\r\n            />\r\n        </div>\r\n     );\r\n});\r\n \r\nexport default Mosaico;","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Variantes.js",["154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184"],"import React,  { useEffect } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport {btnDis, cir1Up, cir1Over, cir1Dis, cir2Up, cir2Over, cir2Dis, cir3Up, cir3Over, cir3Dis, cir4Up, cir4Over, cir4Dis, cir5Up, cir5Over, cir5Dis, cir6Up, cir6Over, cir6Dis, cir7Up, cir7Over, cir7Dis, cir8Up, cir8Over, cir8Dis, cir9Up, cir9Over, cir9Dis, cir10Up, cir10Over, cir10Dis,\r\n    cua1Up, cua1Over, cua1Dis, cua2Up, cua2Over, cua2Dis, cua3Up, cua3Over, cua3Dis, cua4Up, cua4Over, cua4Dis, cua5Up, cua5Over, cua5Dis, cua6Up, cua6Over, cua6Dis, cua7Up, cua7Over, cua7Dis, cua8Up, cua8Over, cua8Dis, cua9Up, cua9Over, cua9Dis, cua10Up, cua10Over, cua10Dis,\r\n    tri1Up, tri1Over, tri1Dis, tri2Up, tri2Over, tri2Dis, tri3Up, tri3Over, tri3Dis, tri4Up, tri4Over, tri4Dis, tri5Up, tri5Over, tri5Dis, tri6Up, tri6Over, tri6Dis, tri7Up, tri7Over, tri7Dis, tri8Up, tri8Over, tri8Dis, tri9Up, tri9Over, tri9Dis, tri10Up, tri10Over, tri10Dis,\r\n    rom1Up, rom1Over, rom1Dis, rom2Up, rom2Over, rom2Dis, \r\n    hex1Up, hex1Over, hex1Dis, hex2Up, hex2Over, hex2Dis,\r\n    lin1Up, lin1Over, lin1Dis, lin2Up, lin2Over, lin2Dis, lin3Up, lin3Over, lin3Dis, lin4Up, lin4Over, lin4Dis\r\n } from '../types/imgbotones';\r\n\r\n\r\n\r\nconst ContenedorVariantes = styled.div`\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n`;\r\nconst BotonVariantes = styled.button`\r\n    cursor:pointer;\r\n    border:none;\r\n    flex-grow: 1;\r\n    flex-basis: auto; //1 grow, 2 shrink, 3 basis \r\n    padding: 0px;\r\n`;\r\n\r\nconst Variantes = ({figura, variante, setVariante, btnVar1,btnVar2, btnVar3, btnVar4, btnVar5, btnVar6, btnVar7, btnVar8, btnVar9, btnVar10}) => {\r\n\r\n    btnVar1 = React.createRef();\r\n    btnVar2 = React.createRef();\r\n    btnVar3 = React.createRef();\r\n    btnVar4 = React.createRef();\r\n    btnVar5 = React.createRef();\r\n    btnVar6 = React.createRef();\r\n    btnVar7 = React.createRef();\r\n    btnVar8 = React.createRef();\r\n    btnVar9 = React.createRef();\r\n    btnVar10 = React.createRef();    \r\n\r\n    const imgListV1 = [btnDis, cir1Up, cir1Over, cir1Dis, cua1Up, cua1Over, cua1Dis, tri1Up, tri1Over, tri1Dis, rom1Up, rom1Over, rom1Dis, hex1Up, hex1Over, hex1Dis, lin1Up, lin1Over, lin1Dis];\r\n    const imgListV2 = [btnDis, cir2Up, cir2Over, cir2Dis, cua2Up, cua2Over, cua2Dis, tri2Up, tri2Over, tri2Dis, rom2Up, rom2Over, rom2Dis, hex2Up, hex2Over, hex2Dis, lin2Up, lin2Over, lin2Dis];\r\n    const imgListV3 = [btnDis, cir3Up, cir3Over, cir3Dis, cua3Up, cua3Over, cua3Dis, tri3Up, tri3Over, tri3Dis, btnDis, btnDis, btnDis, btnDis, btnDis, btnDis, lin3Up, lin3Over, lin3Dis];\r\n    const imgListV4 = [btnDis, cir4Up, cir4Over, cir4Dis, cua4Up, cua4Over, cua4Dis, tri4Up, tri4Over, tri4Dis, btnDis, btnDis, btnDis, btnDis, btnDis, btnDis, lin4Up, lin4Over, lin4Dis];\r\n    const imgListV5 = [btnDis, cir5Up, cir5Over, cir5Dis, cua5Up, cua5Over, cua5Dis, tri5Up, tri5Over, tri5Dis, btnDis, btnDis, btnDis, btnDis, btnDis, btnDis, btnDis, btnDis, btnDis];\r\n    const imgListV6 = [btnDis, cir6Up, cir6Over, cir6Dis, cua6Up, cua6Over, cua6Dis, tri6Up, tri6Over, tri6Dis, btnDis, btnDis, btnDis, btnDis, btnDis, btnDis, btnDis, btnDis, btnDis];\r\n    const imgListV7 = [btnDis, cir7Up, cir7Over, cir7Dis, cua7Up, cua7Over, cua7Dis, tri7Up, tri7Over, tri7Dis, btnDis, btnDis, btnDis, btnDis, btnDis, btnDis, btnDis, btnDis, btnDis];\r\n    const imgListV8 = [btnDis, cir8Up, cir8Over, cir8Dis, cua8Up, cua8Over, cua8Dis, tri8Up, tri8Over, tri8Dis, btnDis, btnDis, btnDis, btnDis, btnDis, btnDis, btnDis, btnDis, btnDis];\r\n    const imgListV9 = [btnDis, cir9Up, cir9Over, cir9Dis, cua9Up, cua9Over, cua9Dis, tri9Up, tri9Over, tri9Dis, btnDis, btnDis, btnDis, btnDis, btnDis, btnDis, btnDis, btnDis, btnDis];\r\n    const imgListV10 = [btnDis, cir10Up, cir10Over, cir10Dis, cua10Up, cua10Over, cua10Dis, tri10Up, tri10Over, tri10Dis, btnDis, btnDis, btnDis, btnDis, btnDis, btnDis, btnDis, btnDis, btnDis];\r\n    let inVari1Up = 0;\r\n    let inVari1Over = 0;\r\n    let inVari2Up = 0;\r\n    let inVari2Over = 0;\r\n    let inVari3Up = 0;\r\n    let inVari3Over = 0;\r\n    let inVari4Up = 0;\r\n    let inVari4Over = 0;\r\n    let inVari5Up = 0;\r\n    let inVari5Over = 0;\r\n    let inVari6Up = 0;\r\n    let inVari6Over = 0;\r\n    let inVari7Up = 0;\r\n    let inVari7Over = 0;\r\n    let inVari8Up = 0;\r\n    let inVari8Over = 0;\r\n    let inVari9Up = 0;\r\n    let inVari9Over = 0;\r\n    let inVari10Up = 0;\r\n    let inVari10Over = 0;\r\n    \r\n\r\n    //Funcion que pone en el STATE el ID de la variante presionada\r\n    const handleChange = e => {\r\n        if(variante === 0){\r\n            setVariante(Number(e.target.id));\r\n        }\r\n    }    \r\n\r\n    useEffect(() => {\r\n        if (figura > 0){\r\n            inVari1Up = (figura * 3) - 2;\r\n            inVari1Over = (figura * 3) - 2 + 1;\r\n            inVari2Up = (figura * 3) - 2;\r\n            inVari2Over = (figura * 3) - 2 + 1;\r\n            inVari3Up = (figura * 3) - 2;\r\n            inVari3Over = (figura * 3) - 2 + 1;\r\n            inVari4Up = (figura * 3) - 2;\r\n            inVari4Over = (figura * 3) - 2 + 1;\r\n            inVari5Up = (figura * 3) - 2;\r\n            inVari5Over = (figura * 3) - 2 + 1;\r\n            inVari6Up = (figura * 3) - 2;\r\n            inVari6Over = (figura * 3) - 2 + 1;\r\n            inVari7Up = (figura * 3) - 2;\r\n            inVari7Over = (figura * 3) - 2 + 1;\r\n            inVari8Up = (figura * 3) - 2;\r\n            inVari8Over = (figura * 3) - 2 + 1;\r\n            inVari9Up = (figura * 3) - 2;\r\n            inVari9Over = (figura * 3) - 2 + 1;\r\n            inVari10Up = (figura * 3) - 2;\r\n            inVari10Over = (figura * 3) - 2 + 1;\r\n            btnVar1.current.src = imgListV1[(figura * 3) - 2];\r\n            btnVar2.current.src = imgListV2[(figura * 3) - 2];\r\n            btnVar3.current.src = imgListV3[(figura * 3) - 2];\r\n            btnVar4.current.src = imgListV4[(figura * 3) - 2];\r\n            btnVar5.current.src = imgListV5[(figura * 3) - 2];\r\n            btnVar6.current.src = imgListV6[(figura * 3) - 2];\r\n            btnVar7.current.src = imgListV7[(figura * 3) - 2];\r\n            btnVar8.current.src = imgListV8[(figura * 3) - 2];\r\n            btnVar9.current.src = imgListV9[(figura * 3) - 2];\r\n            btnVar10.current.src = imgListV10[(figura * 3) - 2];\r\n        }\r\n    }, [figura]); \r\n\r\n    useEffect(() => {\r\n        if (variante > 0){\r\n            deshabilitarVariantes(variante);\r\n        }else{\r\n            iniciarVariantes();\r\n        }\r\n    }, [variante]);\r\n    \r\n    function iniciarVariantes(){\r\n        inVari1Up = inVari1Over = inVari2Up = inVari3Up = inVari3Over = inVari4Up = inVari4Over = inVari5Up = inVari5Over = inVari6Up = inVari6Over = inVari7Up = inVari7Over = inVari8Up = inVari8Over = inVari9Up = inVari9Over = inVari10Up = inVari10Over = 0\r\n        btnVar1.current.src = imgListV1[0];\r\n        btnVar2.current.src = imgListV2[0];\r\n        btnVar3.current.src = imgListV3[0];\r\n        btnVar4.current.src = imgListV4[0];\r\n        btnVar5.current.src = imgListV5[0];\r\n        btnVar6.current.src = imgListV6[0];\r\n        btnVar7.current.src = imgListV7[0];\r\n        btnVar8.current.src = imgListV8[0];\r\n        btnVar9.current.src = imgListV9[0];\r\n        btnVar10.current.src = imgListV10[0];\r\n    }\r\n\r\n    function deshabilitarVariantes(variante){\r\n        btnVar1.current.src = imgListV1[(figura * 3)];\r\n        btnVar2.current.src = imgListV2[(figura * 3)];\r\n        btnVar3.current.src = imgListV3[(figura * 3)];\r\n        btnVar4.current.src = imgListV4[(figura * 3)];\r\n        btnVar5.current.src = imgListV5[(figura * 3)];\r\n        btnVar6.current.src = imgListV6[(figura * 3)];\r\n        btnVar7.current.src = imgListV7[(figura * 3)];\r\n        btnVar8.current.src = imgListV8[(figura * 3)];\r\n        btnVar9.current.src = imgListV9[(figura * 3)];\r\n        btnVar10.current.src = imgListV10[(figura * 3)];\r\n        inVari1Up = inVari1Over = inVari2Up = inVari2Over = inVari3Up = inVari3Over = inVari4Up = inVari4Over = inVari5Up = inVari5Over = inVari6Up = inVari6Over = inVari7Up = inVari7Over = inVari8Up = inVari8Over = inVari9Up = inVari9Over = inVari10Up = inVari10Over = (figura * 3);\r\n        switch (variante) {\r\n            case 11:\r\n                btnVar1.current.src = imgListV1[(figura * 3) - 2];\r\n                inVari1Up = (figura * 3) - 2;\r\n                inVari1Over = (figura * 3) - 2;               \r\n                break;\r\n            case 12:\r\n                btnVar2.current.src = imgListV2[(figura * 3) - 2];\r\n                inVari2Up = (figura * 3) - 2;\r\n                inVari2Over = (figura * 3) - 2;               \r\n                break;\r\n            case 13:\r\n                btnVar3.current.src = imgListV3[(figura * 3) - 2];\r\n                inVari3Up = (figura * 3) - 2;\r\n                inVari3Over = (figura * 3) - 2;               \r\n                break;\r\n            case 14:\r\n                btnVar4.current.src = imgListV4[(figura * 3) - 2];\r\n                inVari4Up = (figura * 3) - 2;\r\n                inVari4Over = (figura * 3) - 2;               \r\n                break;\r\n            case 15:\r\n                btnVar5.current.src = imgListV5[(figura * 3) - 2];\r\n                inVari5Up = (figura * 3) - 2;\r\n                inVari5Over = (figura * 3) - 2;               \r\n                break;\r\n            case 16:\r\n                btnVar6.current.src = imgListV6[(figura * 3) - 2];\r\n                inVari6Up = (figura * 3) - 2;\r\n                inVari6Over = (figura * 3) - 2;               \r\n                break;\r\n            case 17:\r\n                btnVar7.current.src = imgListV7[(figura * 3) - 2];\r\n                inVari7Up = (figura * 3) - 2;\r\n                inVari7Over = (figura * 3) - 2;               \r\n                break;\r\n            case 18:\r\n                btnVar8.current.src = imgListV8[(figura * 3) - 2];\r\n                inVari8Up = (figura * 3) - 2;\r\n                inVari8Over = (figura * 3) - 2;               \r\n                break;\r\n            case 19:\r\n                btnVar9.current.src = imgListV9[(figura * 3) - 2];\r\n                inVari9Up = (figura * 3) - 2;\r\n                inVari9Over = (figura * 3) - 2;               \r\n                break;\r\n            case 20:\r\n                btnVar10.current.src = imgListV10[(figura * 3) - 2];\r\n                inVari10Up = (figura * 3) - 2;\r\n                inVari10Over = (figura * 3) - 2;               \r\n                break;\r\n            default:\r\n                btnVar1.current.src = imgListV1[(figura * 3) - 2];\r\n                inVari1Up = (figura * 3) - 2;\r\n                inVari1Over = (figura * 3) - 2;                 \r\n                break;\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <ContenedorVariantes>\r\n            <BotonVariantes>\r\n                <img \r\n                    id=\"11\"\r\n                    key=\"11\"\r\n                    src={imgListV1[inVari1Up]}\r\n                    onClick={handleChange} \r\n                    onMouseOver={e => (e.currentTarget.src = imgListV1[inVari1Over])}\r\n                    onMouseLeave={e => (e.currentTarget.src = imgListV1[inVari1Up])}\r\n                    ref={btnVar1}\r\n                />                \r\n            </BotonVariantes>\r\n\r\n            <BotonVariantes>\r\n                <img \r\n                    id=\"12\"\r\n                    key=\"12\"\r\n                    src={imgListV2[inVari2Up]}\r\n                    onClick={handleChange} \r\n                    onMouseOver={e => (e.currentTarget.src = imgListV2[inVari2Over])}\r\n                    onMouseLeave={e => (e.currentTarget.src = imgListV2[inVari2Up])}\r\n                    ref={btnVar2}\r\n                />  \r\n            </BotonVariantes>\r\n\r\n            <BotonVariantes>\r\n                <img \r\n                    id=\"13\"\r\n                    key=\"13\"\r\n                    src={imgListV3[inVari3Up]}\r\n                    onClick={handleChange} \r\n                    onMouseOver={e => (e.currentTarget.src = imgListV3[inVari3Over])}\r\n                    onMouseLeave={e => (e.currentTarget.src = imgListV3[inVari3Up])}\r\n                    ref={btnVar3}\r\n                />\r\n            </BotonVariantes>\r\n\r\n            <BotonVariantes>\r\n                <img \r\n                    id=\"14\"\r\n                    key=\"14\"\r\n                    src={imgListV4[inVari4Up]}\r\n                    onClick={handleChange} \r\n                    onMouseOver={e => (e.currentTarget.src = imgListV4[inVari4Over])}\r\n                    onMouseLeave={e => (e.currentTarget.src = imgListV4[inVari4Up])}\r\n                    ref={btnVar4}\r\n                />                 \r\n            </BotonVariantes>\r\n\r\n\r\n            <BotonVariantes>\r\n                <img \r\n                    id=\"15\"\r\n                    key=\"15\"\r\n                    src={imgListV5[inVari5Up]}\r\n                    onClick={handleChange} \r\n                    onMouseOver={e => (e.currentTarget.src = imgListV5[inVari5Over])}\r\n                    onMouseLeave={e => (e.currentTarget.src = imgListV5[inVari5Up])}\r\n                    ref={btnVar5}\r\n                />                 \r\n            </BotonVariantes>\r\n\r\n            <BotonVariantes>\r\n                <img \r\n                    id=\"16\"\r\n                    key=\"16\"\r\n                    src={imgListV6[inVari6Up]}\r\n                    onClick={handleChange} \r\n                    onMouseOver={e => (e.currentTarget.src = imgListV6[inVari6Over])}\r\n                    onMouseLeave={e => (e.currentTarget.src = imgListV6[inVari6Up])}\r\n                    ref={btnVar6}\r\n                />                 \r\n            </BotonVariantes>   \r\n\r\n            <BotonVariantes>\r\n                <img \r\n                    id=\"17\"\r\n                    key=\"17\"\r\n                    src={imgListV7[inVari7Up]}\r\n                    onClick={handleChange} \r\n                    onMouseOver={e => (e.currentTarget.src = imgListV7[inVari7Over])}\r\n                    onMouseLeave={e => (e.currentTarget.src = imgListV7[inVari7Up])}\r\n                    ref={btnVar7}\r\n                />                 \r\n            </BotonVariantes>\r\n\r\n            <BotonVariantes>\r\n                <img \r\n                    id=\"18\"\r\n                    key=\"18\"\r\n                    src={imgListV8[inVari8Up]}\r\n                    onClick={handleChange} \r\n                    onMouseOver={e => (e.currentTarget.src = imgListV8[inVari8Over])}\r\n                    onMouseLeave={e => (e.currentTarget.src = imgListV8[inVari8Up])}\r\n                    ref={btnVar8}\r\n                />                 \r\n            </BotonVariantes>\r\n\r\n            <BotonVariantes>\r\n                <img \r\n                    id=\"19\"\r\n                    key=\"19\"\r\n                    src={imgListV9[inVari9Up]}\r\n                    onClick={handleChange} \r\n                    onMouseOver={e => (e.currentTarget.src = imgListV9[inVari9Over])}\r\n                    onMouseLeave={e => (e.currentTarget.src = imgListV9[inVari9Up])}\r\n                    ref={btnVar9}\r\n                />                 \r\n            </BotonVariantes>\r\n\r\n            <BotonVariantes>\r\n                <img \r\n                    id=\"20\"\r\n                    key=\"20\"\r\n                    src={imgListV10[inVari10Up]}\r\n                    onClick={handleChange} \r\n                    onMouseOver={e => (e.currentTarget.src = imgListV10[inVari10Over])}\r\n                    onMouseLeave={e => (e.currentTarget.src = imgListV10[inVari10Up])}\r\n                    ref={btnVar10}\r\n                />  \r\n            </BotonVariantes>\r\n\r\n        </ContenedorVariantes>\r\n     );\r\n}\r\n \r\nexport default Variantes;",{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":3,"column":1,"nodeType":"191","endLine":23,"endColumn":2},{"ruleId":"192","severity":1,"message":"193","line":12,"column":25,"nodeType":"194","endLine":15,"endColumn":27},{"ruleId":"195","severity":1,"message":"196","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":25},{"ruleId":"199","severity":1,"message":"200","line":24,"column":8,"nodeType":"201","endLine":24,"endColumn":10,"suggestions":"202"},{"ruleId":"195","severity":1,"message":"203","line":6,"column":8,"nodeType":"197","messageId":"198","endLine":6,"endColumn":15},{"ruleId":"195","severity":1,"message":"204","line":8,"column":38,"nodeType":"197","messageId":"198","endLine":8,"endColumn":45},{"ruleId":"195","severity":1,"message":"205","line":8,"column":64,"nodeType":"197","messageId":"198","endLine":8,"endColumn":82},{"ruleId":"199","severity":1,"message":"206","line":73,"column":8,"nodeType":"201","endLine":73,"endColumn":10,"suggestions":"207"},{"ruleId":"199","severity":1,"message":"208","line":30,"column":10,"nodeType":"201","endLine":30,"endColumn":21,"suggestions":"209"},{"ruleId":"192","severity":1,"message":"193","line":49,"column":21,"nodeType":"194","endLine":51,"endColumn":23},{"ruleId":"192","severity":1,"message":"193","line":53,"column":21,"nodeType":"194","endLine":55,"endColumn":35},{"ruleId":"192","severity":1,"message":"193","line":56,"column":21,"nodeType":"194","endLine":58,"endColumn":35},{"ruleId":"199","severity":1,"message":"210","line":71,"column":8,"nodeType":"201","endLine":71,"endColumn":18,"suggestions":"211"},{"ruleId":"192","severity":1,"message":"193","line":127,"column":17,"nodeType":"194","endLine":135,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":139,"column":17,"nodeType":"194","endLine":147,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":151,"column":17,"nodeType":"194","endLine":159,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":163,"column":17,"nodeType":"194","endLine":171,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":175,"column":17,"nodeType":"194","endLine":183,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":188,"column":17,"nodeType":"194","endLine":196,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":200,"column":17,"nodeType":"194","endLine":208,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":212,"column":17,"nodeType":"194","endLine":220,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":224,"column":17,"nodeType":"194","endLine":232,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":236,"column":17,"nodeType":"194","endLine":244,"endColumn":19},{"ruleId":"195","severity":1,"message":"196","line":1,"column":16,"nodeType":"197","messageId":"198","endLine":1,"endColumn":24},{"ruleId":"199","severity":1,"message":"212","line":64,"column":24,"nodeType":"213","endLine":64,"endColumn":25},{"ruleId":"199","severity":1,"message":"214","line":65,"column":26,"nodeType":"213","endLine":65,"endColumn":27},{"ruleId":"199","severity":1,"message":"215","line":66,"column":24,"nodeType":"213","endLine":66,"endColumn":25},{"ruleId":"199","severity":1,"message":"216","line":67,"column":26,"nodeType":"213","endLine":67,"endColumn":27},{"ruleId":"199","severity":1,"message":"217","line":68,"column":24,"nodeType":"213","endLine":68,"endColumn":25},{"ruleId":"199","severity":1,"message":"218","line":69,"column":26,"nodeType":"213","endLine":69,"endColumn":27},{"ruleId":"199","severity":1,"message":"219","line":70,"column":25,"nodeType":"213","endLine":70,"endColumn":26},{"ruleId":"199","severity":1,"message":"220","line":71,"column":27,"nodeType":"213","endLine":71,"endColumn":29},{"ruleId":"199","severity":1,"message":"221","line":72,"column":25,"nodeType":"213","endLine":72,"endColumn":27},{"ruleId":"199","severity":1,"message":"222","line":73,"column":27,"nodeType":"213","endLine":73,"endColumn":29},{"ruleId":"199","severity":1,"message":"223","line":74,"column":25,"nodeType":"213","endLine":74,"endColumn":27},{"ruleId":"199","severity":1,"message":"224","line":75,"column":27,"nodeType":"213","endLine":75,"endColumn":29},{"ruleId":"192","severity":1,"message":"193","line":153,"column":17,"nodeType":"194","endLine":161,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":165,"column":17,"nodeType":"194","endLine":173,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":177,"column":17,"nodeType":"194","endLine":185,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":189,"column":17,"nodeType":"194","endLine":197,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":201,"column":17,"nodeType":"194","endLine":209,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":213,"column":17,"nodeType":"194","endLine":221,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":226,"column":17,"nodeType":"194","endLine":230,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":234,"column":17,"nodeType":"194","endLine":238,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":242,"column":17,"nodeType":"194","endLine":246,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":250,"column":17,"nodeType":"194","endLine":254,"endColumn":19},{"ruleId":"199","severity":1,"message":"225","line":58,"column":8,"nodeType":"201","endLine":58,"endColumn":16,"suggestions":"226"},{"ruleId":"199","severity":1,"message":"227","line":79,"column":25,"nodeType":"228","endLine":79,"endColumn":41},{"ruleId":"199","severity":1,"message":"229","line":80,"column":27,"nodeType":"228","endLine":80,"endColumn":47},{"ruleId":"199","severity":1,"message":"230","line":81,"column":25,"nodeType":"228","endLine":81,"endColumn":41},{"ruleId":"199","severity":1,"message":"231","line":82,"column":27,"nodeType":"228","endLine":82,"endColumn":47},{"ruleId":"199","severity":1,"message":"232","line":83,"column":25,"nodeType":"228","endLine":83,"endColumn":41},{"ruleId":"199","severity":1,"message":"233","line":84,"column":27,"nodeType":"228","endLine":84,"endColumn":47},{"ruleId":"199","severity":1,"message":"234","line":85,"column":25,"nodeType":"228","endLine":85,"endColumn":41},{"ruleId":"199","severity":1,"message":"235","line":86,"column":27,"nodeType":"228","endLine":86,"endColumn":47},{"ruleId":"199","severity":1,"message":"236","line":87,"column":25,"nodeType":"228","endLine":87,"endColumn":41},{"ruleId":"199","severity":1,"message":"237","line":88,"column":27,"nodeType":"228","endLine":88,"endColumn":47},{"ruleId":"199","severity":1,"message":"238","line":89,"column":25,"nodeType":"228","endLine":89,"endColumn":41},{"ruleId":"199","severity":1,"message":"239","line":90,"column":27,"nodeType":"228","endLine":90,"endColumn":47},{"ruleId":"199","severity":1,"message":"240","line":91,"column":25,"nodeType":"228","endLine":91,"endColumn":41},{"ruleId":"199","severity":1,"message":"241","line":92,"column":27,"nodeType":"228","endLine":92,"endColumn":47},{"ruleId":"199","severity":1,"message":"242","line":93,"column":25,"nodeType":"228","endLine":93,"endColumn":41},{"ruleId":"199","severity":1,"message":"243","line":94,"column":27,"nodeType":"228","endLine":94,"endColumn":47},{"ruleId":"199","severity":1,"message":"244","line":95,"column":25,"nodeType":"228","endLine":95,"endColumn":41},{"ruleId":"199","severity":1,"message":"245","line":96,"column":27,"nodeType":"228","endLine":96,"endColumn":47},{"ruleId":"199","severity":1,"message":"246","line":97,"column":26,"nodeType":"228","endLine":97,"endColumn":42},{"ruleId":"199","severity":1,"message":"247","line":98,"column":28,"nodeType":"228","endLine":98,"endColumn":48},{"ruleId":"199","severity":1,"message":"248","line":118,"column":8,"nodeType":"201","endLine":118,"endColumn":18,"suggestions":"249"},{"ruleId":"192","severity":1,"message":"193","line":208,"column":17,"nodeType":"194","endLine":216,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":220,"column":17,"nodeType":"194","endLine":228,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":232,"column":17,"nodeType":"194","endLine":240,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":244,"column":17,"nodeType":"194","endLine":252,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":257,"column":17,"nodeType":"194","endLine":265,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":269,"column":17,"nodeType":"194","endLine":277,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":281,"column":17,"nodeType":"194","endLine":289,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":293,"column":17,"nodeType":"194","endLine":301,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":305,"column":17,"nodeType":"194","endLine":313,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":317,"column":17,"nodeType":"194","endLine":325,"endColumn":19},"no-native-reassign",["250"],"no-negated-in-lhs",["251"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'almacen', 'canvasRef', 'setAlmacen', and 'setMosSeleccionado'. Either include them or remove the dependency array.","ArrayExpression",["252"],"'Almacen' is defined but never used.","'almacen' is assigned a value but never used.","'setMosSeleccionado' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'canvasMural' and 'limpiaMural'. Either include them or remove the dependency array.",["253"],"React Hook useEffect has a missing dependency: 'setAnimacion'. Either include it or remove the dependency array.",["254"],"React Hook useEffect has missing dependencies: 'habilitarColores' and 'iniciarColores'. Either include them or remove the dependency array.",["255"],"Assignments to the 'inCircUp' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","Assignments to the 'inCircOver' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'inCuadUp' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'inCuadOver' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'inTriaUp' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'inTriaOver' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'inRomboUp' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'inRomboOver' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'inHexadUp' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'inHexadOver' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'inLineaUp' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'inLineaOver' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has missing dependencies: 'col', 'color', 'fig1', 'fig2', 'fig3', 'fig4', 'fig5', 'fig6', 'figura', 'ref', 'setFigura', 'setPintar', and 'setVariante'. Either include them or remove the dependency array.",["256"],"Assignments to the 'inVari1Up' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","BinaryExpression","Assignments to the 'inVari1Over' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'inVari2Up' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'inVari2Over' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'inVari3Up' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'inVari3Over' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'inVari4Up' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'inVari4Over' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'inVari5Up' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'inVari5Over' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'inVari6Up' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'inVari6Over' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'inVari7Up' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'inVari7Over' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'inVari8Up' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'inVari8Over' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'inVari9Up' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'inVari9Over' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'inVari10Up' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'inVari10Over' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has missing dependencies: 'deshabilitarVariantes' and 'iniciarVariantes'. Either include them or remove the dependency array.",["257"],"no-global-assign","no-unsafe-negation",{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},"Update the dependencies array to be: [almacen, canvasRef, setAlmacen, setMosSeleccionado]",{"range":"270","text":"271"},"Update the dependencies array to be: [canvasMural, limpiaMural]",{"range":"272","text":"273"},"Update the dependencies array to be: [animacion, setAnimacion]",{"range":"274","text":"275"},"Update the dependencies array to be: [habilitarColores, iniciarColores, variante]",{"range":"276","text":"277"},"Update the dependencies array to be: [col, color, fig1, fig2, fig3, fig4, fig5, fig6, figura, pintar, ref, setFigura, setPintar, setVariante]",{"range":"278","text":"279"},"Update the dependencies array to be: [deshabilitarVariantes, iniciarVariantes, variante]",{"range":"280","text":"281"},[991,993],"[almacen, canvasRef, setAlmacen, setMosSeleccionado]",[3933,3935],"[canvasMural, limpiaMural]",[873,884],"[animacion, setAnimacion]",[2293,2303],"[habilitarColores, iniciarColores, variante]",[1802,1810],"[col, color, fig1, fig2, fig3, fig4, fig5, fig6, figura, pintar, ref, setFigura, setPintar, setVariante]",[6375,6385],"[deshabilitarVariantes, iniciarVariantes, variante]"]