[{"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\index.js":"1","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\App.js":"2","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\reportWebVitals.js":"3","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\context\\salas\\salaState.js":"4","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Juegayaprende.js":"5","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\context\\salas\\salaReducer.js":"6","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\context\\salas\\salaContext.js":"7","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\types\\index.js":"8","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Header.js":"9","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Secciones.js":"10","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Almacenes.js":"11","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Horno.js":"12","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Murales.js":"13","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Collages.js":"14","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Programacion.js":"15","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\helper.js":"16","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Amosaico.js":"17","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\types\\imgbotones.js":"18","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Colores.js":"19","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Figuras.js":"20","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Mosaico.js":"21","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Variantes.js":"22","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Player.js":"23","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Sala.js":"24","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Almacencollages.js":"25","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Controles.js":"26","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Panelprograma.js":"27","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Nuevainstruccion.js":"28","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Errorinput.js":"29","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\context\\programa\\programaState.js":"30","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\context\\programa\\programaReducer.js":"31","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\context\\programa\\programaContext.js":"32","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Instruccionclass.js":"33","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Instruccion.js":"34","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Robot.js":"35","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Controlmanual.js":"36"},{"size":288,"mtime":1607660916545,"results":"37","hashOfConfig":"38"},{"size":268,"mtime":1608587427942,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":499162500000,"results":"40","hashOfConfig":"38"},{"size":2475,"mtime":1610474625189,"results":"41","hashOfConfig":"38"},{"size":559,"mtime":1610135816311,"results":"42","hashOfConfig":"38"},{"size":964,"mtime":1608693114191,"results":"43","hashOfConfig":"38"},{"size":109,"mtime":1608072096972,"results":"44","hashOfConfig":"38"},{"size":2373,"mtime":1609977349157,"results":"45","hashOfConfig":"38"},{"size":2891,"mtime":1610127207420,"results":"46","hashOfConfig":"38"},{"size":4512,"mtime":1610135739670,"results":"47","hashOfConfig":"38"},{"size":11274,"mtime":1609282582710,"results":"48","hashOfConfig":"38"},{"size":6442,"mtime":1610382312807,"results":"49","hashOfConfig":"38"},{"size":10318,"mtime":1610407462340,"results":"50","hashOfConfig":"38"},{"size":10583,"mtime":1609302233739,"results":"51","hashOfConfig":"38"},{"size":8437,"mtime":1610492236303,"results":"52","hashOfConfig":"38"},{"size":3712,"mtime":1610076233128,"results":"53","hashOfConfig":"38"},{"size":2287,"mtime":1608598372299,"results":"54","hashOfConfig":"38"},{"size":14579,"mtime":1608079478827,"results":"55","hashOfConfig":"38"},{"size":11678,"mtime":1608587577386,"results":"56","hashOfConfig":"38"},{"size":9935,"mtime":1608587586781,"results":"57","hashOfConfig":"38"},{"size":13653,"mtime":1608595036442,"results":"58","hashOfConfig":"38"},{"size":19119,"mtime":1608587702494,"results":"59","hashOfConfig":"38"},{"size":1475,"mtime":1608587658724,"results":"60","hashOfConfig":"38"},{"size":3288,"mtime":1610471532707,"results":"61","hashOfConfig":"38"},{"size":12426,"mtime":1610464980761,"results":"62","hashOfConfig":"38"},{"size":1451,"mtime":1610503874411,"results":"63","hashOfConfig":"38"},{"size":2104,"mtime":1610506389603,"results":"64","hashOfConfig":"38"},{"size":10450,"mtime":1609808137958,"results":"65","hashOfConfig":"38"},{"size":149,"mtime":1609783254340,"results":"66","hashOfConfig":"38"},{"size":1523,"mtime":1610480883890,"results":"67","hashOfConfig":"38"},{"size":736,"mtime":1609977587553,"results":"68","hashOfConfig":"38"},{"size":116,"mtime":1609977530273,"results":"69","hashOfConfig":"38"},{"size":331,"mtime":1609806624574,"results":"70","hashOfConfig":"38"},{"size":1266,"mtime":1609808135694,"results":"71","hashOfConfig":"38"},{"size":3320,"mtime":1610507060983,"results":"72","hashOfConfig":"38"},{"size":2672,"mtime":1610491916163,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"kuyef4",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\index.js",[],["152","153"],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\App.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\reportWebVitals.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\context\\salas\\salaState.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Juegayaprende.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\context\\salas\\salaReducer.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\context\\salas\\salaContext.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\types\\index.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Header.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Secciones.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Almacenes.js",["154","155","156"],"import React, { useContext, useEffect } from 'react';\r\nimport salaContext from '../context/salas/salaContext'\r\nimport styles from './Almacenes.module.css';\r\n\r\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { obtenerXInicialMos, obtenerYInicialMos, obtenerMosXSeleccionado, obtenerXDelMosSeleccionado, obtenerLargoAlmacen, obtenerAltoAlmacen, obtenerNumMosaicosXLargoImagen } from '../helper';\r\n\r\nconst Almacenes = React.forwardRef((props,ref) => {\r\n\r\n    const refInput = React.createRef();\r\n\r\n    const salaContexto = useContext(salaContext);\r\n    const { alto, largo, separacion, almacen, setAlmacen, mosSeleccionado, setMosSeleccionado, guardarAlmacen, setGuardarAlmacen } = salaContexto;\r\n    const canvasRef = ref;\r\n\r\n    useEffect(() => {\r\n        const almacenMos = localStorage.getItem('almacenMos');  //lee de localStorage la variable\r\n        if(almacenMos != null){   \r\n            const canvasAlm = canvasRef.current;\r\n            const ctxAlm = canvasAlm.getContext('2d'); //Crea el contexto donde pintará el mosaico seleccionado \r\n            ctxAlm.restore();\r\n            ctxAlm.fillStyle = 'white';\r\n            ctxAlm.strokeStyle = 'white';  \r\n            ctxAlm.fillRect(0, 0, canvasAlm.width, canvasAlm.height);\r\n            setMosSeleccionado(0);\r\n\r\n            let img = new Image();\r\n            img.src = almacenMos;\r\n\r\n            img.onload = function() {\r\n                let numMos = obtenerNumMosaicosXLargoImagen(img.naturalWidth, largo, separacion);\r\n                setAlmacen(numMos);\r\n                ctxAlm.drawImage(img, 0, 0, img.width, img.height);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n\r\n    useEffect (()=>{\r\n        if (guardarAlmacen){\r\n            const canvas = canvasRef.current;\r\n            let canvasdwn = document.createElement('canvas');\r\n            canvasdwn.width = obtenerLargoAlmacen(almacen, largo, separacion); //le coloca el largo del canvas dependiendo de los mosaicos\r\n            canvasdwn.height = obtenerAltoAlmacen(alto, separacion);//coloca el alto del canvas\r\n            var destCtx = canvasdwn.getContext('2d');\r\n            destCtx.drawImage(canvas, 0, 0); //Copia la imagen del canvas del almacen al canvas que va a descargar con el tamaño mínimo necesario\r\n            let dataImg = canvasdwn.toDataURL(); //convierte la imagen a una cadena base 64\r\n            localStorage.setItem('almacenMos', dataImg); //guarda la cadena en base 64 en el Local Storage\r\n            setGuardarAlmacen(false);\r\n        }\r\n    }, [guardarAlmacen]);\r\n\r\n\r\n    const handleChange = e => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n        let rect = canvas.getBoundingClientRect();\r\n        let x = e.clientX - rect.left; //Obtiene coordenada X donde el usuario dio clic\r\n        let y = e.clientY - rect.top; // Obtiene coordenada Y donde el usuario dio clic\r\n        let numMos = obtenerMosXSeleccionado(x, largo, separacion); //Obtenemos el numero de mosaico seleccionado\r\n        if (numMos !== mosSeleccionado && numMos <= almacen) { //El mosaico debe ser diferente al seleccionado con anterioridad y debe ser menor al tamaño del almacen\r\n            ctx.strokeStyle = 'white'; //El color blanco del cuadro para borrar la seleccion del mosaico seleccionado con anterioridad\r\n            ctx.lineWidth = 3; //Grosor 3 para borar el marco negrocon grosor 2\r\n            let xx = obtenerXDelMosSeleccionado(mosSeleccionado, largo, separacion); //Obtiene la coordenada X del mosaico seleccionado\r\n            ctx.strokeRect(xx, 0, separacion + largo + separacion, separacion + alto + separacion); // imprime el marco blanco\r\n            ctx.strokeStyle = 'black'; //Coloca el color negro para el marco del mosaico seleccionado\r\n            ctx.lineWidth = 2; //El marco de grosor 2 para que pueda ser borrado por el marco blanco\r\n            const xInicialMos = obtenerXInicialMos(x, largo, separacion); //Se obtiene la coordenada X del marco a pintar \r\n            const yInicialMos = obtenerYInicialMos(y, alto, separacion); //Se obtiene la coordenada Y del marco a pintar \r\n            ctx.strokeRect(xInicialMos, yInicialMos, separacion + largo + separacion, separacion + alto + separacion); //Se pinta el marco negro \r\n            setMosSeleccionado(numMos);//Guarda el nuevo mosaico seleccionado   \r\n        }\r\n    }\r\n\r\n    const abrirAlmacen = e => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n        ctx.fillStyle = 'white';\r\n        ctx.strokeStyle = 'white';  \r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n        setMosSeleccionado(0);//Ya no hay mosaico seleccionado\r\n    \r\n        const img = new Image();\r\n        const file = e.target.files[0];\r\n        const reader = new FileReader();\r\n      \r\n        reader.addEventListener(\"load\", function () {\r\n          img.src = reader.result;\r\n        }, false);\r\n      \r\n        if (file) {\r\n          reader.readAsDataURL(file);\r\n        }\r\n    \r\n        img.onload = function() {\r\n            let numMos = obtenerNumMosaicosXLargoImagen(img.naturalWidth, largo, separacion);\r\n            setAlmacen(numMos);\r\n          ctx.drawImage(img, 0, 0, img.naturalWidth, img.naturalHeight);\r\n        };\r\n        console.log(img.naturalWidth);\r\n    }\r\n        \r\n    const eliminartodos = () => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n        ctx.fillStyle = 'white';\r\n        ctx.strokeStyle = 'white';  \r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n        setAlmacen(0);\r\n        setMosSeleccionado(0);//Ya no hay mosaico seleccionado\r\n    }\r\n\r\n    const borrarMos = () => {\r\n        if (mosSeleccionado > 0 && almacen > 0){  //Si existen mosaicos en el almacen y hay alguno seleccionado\r\n            const canvas = canvasRef.current;\r\n            const ctx = canvas.getContext('2d');\r\n            ctx.strokeStyle = 'white'; //El color blanco del cuadro para borrar la seleccion del mosaico seleccionado con anterioridad\r\n            ctx.lineWidth = 3; //Grosor 3 para borar el marco negrocon grosor 2\r\n            let xx = obtenerXDelMosSeleccionado(mosSeleccionado, largo, separacion); //Obtiene la coordenada X del mosaico seleccionado\r\n            ctx.strokeRect(xx, 0, separacion + largo + separacion, separacion + alto + separacion); // imprime el marco blanco\r\n            xx = obtenerXDelMosSeleccionado(mosSeleccionado+1, largo, separacion);\r\n            var imgData = ctx.getImageData(xx, 0, canvas.width-xx, canvas.height); //Obtiene la imagen  del canvas del mosaico en TRANSICION   \r\n            xx = obtenerXDelMosSeleccionado(mosSeleccionado, largo, separacion);          \r\n            ctx.putImageData(imgData, xx, 0);\r\n            setAlmacen(almacen -1);\r\n            setMosSeleccionado(0);//Ya no hay mosaico seleccionado\r\n        }\r\n    }\r\n\r\n    const guardar = () => {\r\n        if (almacen > 0){\r\n            const canvas = canvasRef.current;\r\n            if (mosSeleccionado > 0){  //Si existen mosaicos en el almacen y hay alguno seleccionado\r\n                \r\n                const ctx = canvas.getContext('2d');\r\n                ctx.strokeStyle = 'white'; //El color blanco del cuadro para borrar la seleccion del mosaico seleccionado con anterioridad\r\n                ctx.lineWidth = 3; //Grosor 3 para borar el marco negrocon grosor 2\r\n                let xx = obtenerXDelMosSeleccionado(mosSeleccionado, largo, separacion); //Obtiene la coordenada X del mosaico seleccionado\r\n                ctx.strokeRect(xx, 0, separacion + largo + separacion, separacion + alto + separacion); // imprime el marco blanco\r\n                setMosSeleccionado(0);//Ya no hay mosaico seleccionado\r\n            }\r\n            let canvasdwn = document.createElement('canvas'); //Crea el canvas que va a descargar\r\n            canvasdwn.width = obtenerLargoAlmacen(almacen, largo, separacion); //le coloca el largo del canvas dependiendo de los mosaicos\r\n            canvasdwn.height = obtenerAltoAlmacen(alto, separacion);//coloca el alto del canvas\r\n            var destCtx = canvasdwn.getContext('2d');\r\n            destCtx.drawImage(canvas, 0, 0); //Copia la imagen del canvas del almacen al canvas que va a descargar con el tamaño mínimo necesario\r\n            let downloadLink = document.createElement('a');\r\n            downloadLink.setAttribute('download', 'almacen.png');\r\n            let dataURL = canvasdwn.toDataURL('image/png');\r\n            let url = dataURL.replace(/^data:image\\/png/,'data:application/octet-stream');\r\n            downloadLink.setAttribute('href',url);\r\n            downloadLink.click();\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <div className={`${styles.tercera_seccion}`} >\r\n            <div className={`${styles.contenedor_almacen}`} >\r\n                <canvas\r\n                    ref={ref}\r\n                    id='canv'\r\n                    width='1000'\r\n                    height={separacion + largo + separacion}\r\n                    onClick={handleChange}\r\n                />\r\n            </div>\r\n\r\n            <div className={`${styles.contenedor_botones}`}>\r\n                    <Button\r\n                        component=\"label\"\r\n                    >\r\n                        <input\r\n                            type=\"file\"\r\n                            id=\"fileUpload\"\r\n                            style={{ display: \"none\" }}\r\n                            onChange={abrirAlmacen}\r\n                            ref={refInput}\r\n                        />\r\n                        <FolderOpenIcon\r\n                            style={{ fontSize: 35 }}\r\n                        ></FolderOpenIcon>\r\n                    </Button>\r\n\r\n                    <Button\r\n                        type=\"button\"\r\n                        onClick={ () => guardar() }\r\n                    >\r\n                    <SaveIcon\r\n                        style={{ fontSize: 35 }}\r\n                    >\r\n                    </SaveIcon>\r\n                    </Button>\r\n\r\n                    <Button\r\n                            type=\"button\"\r\n                            onClick={ () => borrarMos() }\r\n                        >\r\n                        <HighlightOffIcon\r\n                            type=\"button\"\r\n                            fontSize=\"small\"\r\n                            style={{ color: 'blue' }}\r\n                            style={{ fontSize: 35 }}\r\n                    \r\n                        ></HighlightOffIcon>\r\n                    </Button>\r\n\r\n                    <Button\r\n                                type=\"button\"\r\n                                onClick={ () => eliminartodos() }\r\n                            >\r\n                        <DeleteOutlineIcon\r\n                            style={{ fontSize: 35 }}\r\n                        ></DeleteOutlineIcon>\r\n                    </Button>\r\n            </div>\r\n        </div> \r\n     );\r\n});\r\n\r\nAlmacenes.protoTypes = {\r\n    ref: PropTypes.node.isRequired \r\n}\r\n \r\nexport default Almacenes;","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Horno.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Murales.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Collages.js",["157"],"import React, { useEffect, useContext, useState } from 'react';\r\nimport salaContext from '../context/salas/salaContext'\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Collages.module.css';\r\n\r\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport Button from '@material-ui/core/Button';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\n\r\nimport { obtenerXinicialCollage, obtenerYinicialCollage, obtenerLargoSeccionCollage, obtenerAltoSeccionCollage } from '../helper';\r\n\r\n\r\nconst Collages = React.forwardRef((props,ref) => {\r\n\r\n    const canvasAlmaCollage = ref;  // Toma la referencia del canvas del Almacen que se pasa por parámetro en la llamada del componente\r\n\r\n\r\n    const [filas, setFilas] = useState(3);\r\n    const [columnas, setColumnas] = useState(3);\r\n    const salaContexto = useContext(salaContext);\r\n    const {altoCollage, largoCollage } = salaContexto;\r\n    const canvasCollage = React.createRef(); //Crea la referencia del canvas del Collage donde se pegan los murales\r\n    const refInput = React.createRef(); //Crea la referencia al input que permite abrir el mural\r\n\r\n    const handleChange = e => {\r\n        const canvasAlm = canvasAlmaCollage.current; //El current del Almacen\r\n        const canvasMu = canvasCollage.current;       //El current del Mural\r\n        const ctxMural = canvasMu.getContext('2d'); //Crea el contexto donde pintará el mosaico seleccionado\r\n        let rect = canvasMu.getBoundingClientRect();\r\n        let x = e.clientX - rect.left; //Obtiene coordenada X donde el usuario dio clic\r\n        let y = e.clientY - rect.top; // Obtiene coordenada Y donde el usuario dio clic\r\n        let xIniCollage = obtenerXinicialCollage(x, columnas, largoCollage);\r\n        let yIniCollage = obtenerYinicialCollage(y, filas, altoCollage);\r\n        let xFinCollage = obtenerLargoSeccionCollage(x, columnas, largoCollage);\r\n        let yFinCollage = obtenerAltoSeccionCollage(y, filas, altoCollage);\r\n        ctxMural.drawImage(canvasAlm, 0, 0, canvasAlm.width-1, canvasAlm.height-1, xIniCollage, yIniCollage, xFinCollage, yFinCollage); //Estampa el mosaico en el Mural\r\n        let dataImg = canvasMu.toDataURL(); //convierte la imagen a una cadena base 64\r\n        localStorage.setItem('collage', dataImg); //guarda la cadena en base 64 en el Local Storage\r\n    }\r\n\r\n    function limpiaColage(){\r\n        const canvasRef = canvasCollage;\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n        ctx.lineWidth = 1;\r\n        ctx.lineCap = 'butt';\r\n        ctx.fill('nonzero');\r\n        ctx.fillStyle = 'black';\r\n        ctx.strokeStyle = 'white';\r\n        ctx.clearRect(0, 0, largoCollage,altoCollage);\r\n        ctx.fillRect(0, 0, largoCollage,altoCollage);\r\n        ctx.beginPath();\r\n        let tamColumnas =  largoCollage / columnas;\r\n        for (let xx = 0; xx < columnas; xx++) {\r\n            ctx.moveTo((tamColumnas * xx),0);\r\n            ctx.lineTo((tamColumnas * xx), altoCollage);\r\n            ctx.stroke();\r\n        }\r\n        let tamFilas = altoCollage / filas;\r\n        for (let yy = 0; yy < filas; yy++) {\r\n            ctx.moveTo(0,(tamFilas * yy));\r\n            ctx.lineTo(largoCollage,(tamFilas * yy));\r\n            ctx.stroke();\r\n        }\r\n    }\r\n\r\n    const imprimir = () => {\r\n        const canvasRef = canvasCollage;\r\n        const canvas = canvasRef.current;\r\n        let canvasdwn = document.createElement('canvas'); //Crea el canvas que va a descargar\r\n        canvasdwn.width = largoCollage; //le coloca el largo del canvas dependiendo de los mosaicos\r\n        canvasdwn.height = altoCollage;//coloca el alto del canvas\r\n        var destCtx = canvasdwn.getContext('2d');\r\n        destCtx.drawImage(canvas, 0, 0); //Copia la imagen del canvas del almacen al canvas que va a descargar con el tamaño mínimo necesario\r\n        let downloadLink = document.createElement('a');\r\n        downloadLink.setAttribute('download', 'collage.png');\r\n        let dataURL = canvasdwn.toDataURL('image/png');\r\n\r\n        var windowContent = '<img src=\"' + dataURL + '\">';\r\n        var printWin = window.open('','','width=800,height=600');\r\n        printWin.document.open();\r\n        printWin.document.write(windowContent);\r\n        printWin.document.close();\r\n        printWin.focus();\r\n        printWin.print();\r\n    }\r\n\r\n    const guardar = () => {\r\n        const canvasRef = canvasCollage;\r\n        const canvas = canvasRef.current;\r\n        let canvasdwn = document.createElement('canvas'); //Crea el canvas que va a descargar\r\n        canvasdwn.width = largoCollage; //le coloca el largo del canvas dependiendo de los mosaicos\r\n        canvasdwn.height = altoCollage;//coloca el alto del canvas\r\n        var destCtx = canvasdwn.getContext('2d');\r\n        destCtx.drawImage(canvas, 0, 0); //Copia la imagen del canvas del almacen al canvas que va a descargar con el tamaño mínimo necesario\r\n        let downloadLink = document.createElement('a');\r\n        downloadLink.setAttribute('download', 'collage.png');\r\n        let dataURL = canvasdwn.toDataURL('image/png');\r\n        let url = dataURL.replace(/^data:image\\/png/,'data:application/octet-stream');\r\n        downloadLink.setAttribute('href',url);\r\n        downloadLink.click();\r\n    }\r\n\r\n    const abrirCollageBtn = e => {\r\n        const canvasRef = canvasCollage;\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n        ctx.fillStyle = 'black';\r\n        ctx.strokeStyle = 'white';  \r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n      \r\n        const img = new Image();\r\n        const file = e.target.files[0];\r\n        const reader = new FileReader();\r\n        reader.addEventListener(\"load\", function () {\r\n          img.src = reader.result;\r\n        }, false);\r\n      \r\n        if (file) {\r\n          reader.readAsDataURL(file);\r\n        }\r\n     \r\n        img.onload = function() {\r\n          ctx.drawImage(img, 0, 0, img.naturalWidth, img.naturalHeight);\r\n        };\r\n    }\r\n\r\n    const asignarFilas = e => {\r\n        setFilas(e.target.value);\r\n    }\r\n\r\n    const asignarColumnas = e => {\r\n        setColumnas(e.target.value);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        const collage = localStorage.getItem('collage');\r\n        const canvasRef = canvasCollage;\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n        if(collage === null){\r\n            console.log('No hay nada en Storage')\r\n            limpiaColage();  \r\n        }else{\r\n            console.log('Si hay algo');\r\n            let img = new Image();\r\n            img.src = collage;\r\n            ctx.restore();\r\n            ctx.drawImage(img, 0,0,canvas.width, canvas.height)\r\n            img.onload = function() {\r\n                ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n            }\r\n        } \r\n    }, [])\r\n\r\n    useEffect(() => {   \r\n        limpiaColage(); \r\n        // eslint-disable-next-line\r\n    }, [filas, columnas])\r\n\r\n    return ( \r\n        <div className={`${styles.collages_y_toolbar}`}  >\r\n            <div className={`${styles.cont_collage}`}  >\r\n                <canvas\r\n                    ref={canvasCollage}\r\n                    width={largoCollage}\r\n                    height={altoCollage}\r\n                    onClick={handleChange}\r\n                />\r\n            </div>\r\n            <div className={`${styles.toolbar}`}  >\r\n                <p>Filas.</p>\r\n                <select \r\n                    id='filas'\r\n                    onChange={asignarFilas}\r\n                    className={`${styles.selector}`}\r\n                    defaultValue= \"3\">\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                </select>\r\n\r\n                <p>Columnas.</p>\r\n                <select \r\n                    id='columnas' \r\n                    onChange={asignarColumnas}\r\n                    className={`${styles.selector}`}\r\n                    defaultValue= \"3\">\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                </select>\r\n\r\n                            <Button\r\n                                component=\"label\"\r\n                            >\r\n                                <input\r\n                                    type=\"file\"\r\n                                    id=\"fileUpload\"\r\n                                    style={{ display: \"none\" }}\r\n                                    onChange={abrirCollageBtn}\r\n                                    ref={refInput}\r\n                                />\r\n                                <FolderOpenIcon\r\n                                    style={{ fontSize: 35 }}\r\n                                ></FolderOpenIcon>\r\n                            </Button>\r\n\r\n                            <Button\r\n                                type=\"button\"\r\n                                onClick={ () => guardar() }\r\n                            >\r\n                            <SaveIcon\r\n                                style={{ fontSize: 35 }}\r\n                            >\r\n                            </SaveIcon>\r\n                            </Button>\r\n\r\n                            <Button\r\n                                        type=\"button\"\r\n                                        onClick={ () => limpiaColage() }\r\n                                    >\r\n                                <DeleteOutlineIcon\r\n                                    style={{ fontSize: 35 }}\r\n                                ></DeleteOutlineIcon>\r\n                            </Button>\r\n\r\n                            <Button\r\n                                        type=\"button\"\r\n                                        onClick={ () => imprimir() }\r\n                                    >\r\n                                <PrintIcon\r\n                                    style={{ fontSize: 35 }}\r\n                                ></PrintIcon>\r\n                            </Button>          \r\n                </div>\r\n            </div>\r\n     );\r\n});\r\n\r\nCollages.protoTypes = {\r\n    ref: PropTypes.node.isRequired \r\n}\r\n \r\nexport default Collages;","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Programacion.js",["158","159","160","161","162"],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\helper.js",["163"],"import React from 'react';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\n//Dada una coordenada en X, devuelve el valor en X donde inicia el mosaico\r\nexport function obtenerXInicialMos(x, largo, separacion){\r\n    const largoMosaico = separacion + largo + separacion;\r\n    return (Math.floor(x / largoMosaico) * largoMosaico);\r\n}\r\n\r\nexport function SimpleMediaQuery(query) {\r\n    const matches = useMediaQuery(query);\r\n    return (matches);\r\n  }\r\n\r\n//Dada una coordenada en Y, devuelve el valor en Y donde inicia el mosaico\r\nexport function obtenerYInicialMos(y, alto, separacion){\r\n    const altoMosaico = separacion + alto + separacion;\r\n    return (Math.floor(y / altoMosaico) * altoMosaico);\r\n}\r\n\r\n//Dada una coordenada en X, devuelve el valor en X donde termina el mosaico\r\nexport function obtenerXFinalMos(x, largo, separacion){\r\n    const largoMosaico = separacion + largo + separacion;\r\n    return (largoMosaico + (Math.floor(x / largoMosaico) * largoMosaico));\r\n}\r\n\r\n//Dada una coordenada en Y, devuelve el valor en Y donde termina el mosaico \r\nexport function obtenerYFinalMos(y, alto, separacion){\r\n    const altoMosaico = separacion + alto + separacion;\r\n    return (altoMosaico + (Math.floor(y / altoMosaico) * altoMosaico));\r\n}\r\n\r\n//Dada una X, devuelve el número de mosaico seleccionado\r\nexport function obtenerMosXSeleccionado(x, largo, separacion){\r\n    return (1 + Math.trunc(x / (largo + separacion + separacion)));\r\n}\r\n\r\n//Dado un mosaico, devuelve el valor en X donde inicia\r\nexport function obtenerXDelMosSeleccionado(numMosaico, largo, separacion){\r\n    return ((numMosaico - 1)*(separacion + largo + separacion));\r\n}\r\n\r\n//Dada una X, devuelve el número de mosaico seleccionado en Murales 1\r\nexport function obtenerMosXSeleccionadoMu(x, largo, separacion){\r\n    return (1 + Math.trunc(x / (largo + 1 )));\r\n}\r\n\r\n//Dado un mosaico, devuelve el valor en X donde inicia en Murales 1\r\nexport function obtenerXDelMosSeleccionadoMu(numMosaico, largo, separacion){\r\n    return ((numMosaico - 1)*(largo + 1));\r\n}\r\n\r\n//Dada una Y, devuelve el número de mosaico seleccionado en Murales 1\r\nexport function obtenerMosYSeleccionadoMu(y, alto, separacion){\r\n    return (1 + Math.trunc(y / (alto + 1 )));\r\n}\r\n\r\n//Dado un mosaico, devuelve el valor en Y donde inicia en Murales 1\r\nexport function obtenerYDelMosSeleccionadoMu(numMosaico, alto, separacion){\r\n    return ((numMosaico - 1)*(alto + 1));\r\n}\r\n\r\n//Calcula el largo del canvas que tiene el almacen dependiendo de la cantidad de mosaicos y el largo\r\nexport function obtenerLargoAlmacen(mosaicos, largo, separacion){\r\n    return (mosaicos * (separacion + largo + separacion))    \r\n}\r\n\r\n//Calcula el Alto del canvas que tiene el almacen dependiendo del alto del mosaico y la separación\r\nexport function obtenerAltoAlmacen(alto, separacion){\r\n    return (separacion + alto + separacion);    \r\n}\r\n\r\n//Devvuelve la cantidad de mosaicos que debería contener un almacen, dado el largo de la imagen\r\nexport function obtenerNumMosaicosXLargoImagen(naturalWidth, largo, separacion){\r\n    return Math.trunc(naturalWidth / (separacion + largo + separacion));\r\n}\r\n\r\nexport function obtenerXinicialCollage(x, columnas, largoCollage){\r\n    const largoSeccion = largoCollage / columnas;\r\n    return (Math.floor(x / largoSeccion) * largoSeccion); \r\n}\r\n\r\nexport function obtenerYinicialCollage(y, filas, altoCollage){\r\n    const altoSeccion = altoCollage / filas;\r\n    return (Math.floor(y / altoSeccion) * altoSeccion); \r\n}\r\n\r\nexport function obtenerLargoSeccionCollage(x, columnas, largoCollage){\r\n    return largoCollage / columnas;\r\n}\r\n\r\nexport function obtenerAltoSeccionCollage(y, filas, altoCollage){\r\n    return altoCollage / filas; \r\n}","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Amosaico.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\types\\imgbotones.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Colores.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Figuras.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Mosaico.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Variantes.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Player.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Sala.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Almacencollages.js",["164","165","166"],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Controles.js",["167"],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Panelprograma.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Nuevainstruccion.js",["168","169"],"import React, { Fragment, useState, useEffect, useContext } from 'react';\r\nimport Instruccionclass from './Instruccionclass';\r\nimport Errorinput from './Errorinput';\r\nimport programaContext from '../context/programa/programaContext';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport styles from './Nuevainstruccion.module.css';\r\n\r\nconst Nuevainstruccion = (props) => {\r\n\r\n    const instruccionesContext = useContext(programaContext);\r\n    const { programa, agregarInstruccion } = instruccionesContext;\r\n\r\n\r\n    let {nvaInstruccion, setnvaInstruccion} = props;\r\n    const [tipoInstruccion, settipoInstruccion] = useState(0);\r\n    const [tituloInstruccion, setTituloInstruccion] = useState('');\r\n    const [parametron, setParametron] = useState(0);\r\n    const [errorinput, setErrorinput] = useState(false);\r\n    const [mensajeerror, setMensajeerror] = useState('');\r\n    /*Hay 11 tipos de instrucciónes */\r\n\r\n    useEffect(() => {\r\n        setErrorinput(false);\r\n        setParametron(0);\r\n    }, [tipoInstruccion]);//Cuando se cambia el tipo de instrucción (cambio en el select )\r\n\r\n    const asignarInstruccion = e => {\r\n        settipoInstruccion(parseInt(e.target.value));\r\n        let titulo = ' ';\r\n        switch (parseInt(e.target.value)) {\r\n            case 1:\r\n                titulo = 'Ir al origen';\r\n                break;\r\n            case 2:\r\n                titulo='Ir al mosaico n';\r\n                break;\r\n            case 3:\r\n                titulo='Cargar mosaico';\r\n                break;\r\n            case 4:\r\n                titulo='Descarga mosaico';\r\n                break;\r\n            case 5:\r\n                titulo='Gira Robot';\r\n                break;\r\n            case 6:\r\n                titulo='Gira Mosaico';\r\n                break;\r\n            case 7:\r\n                titulo='Avanza Robot';\r\n                break;\r\n            case 8:\r\n                titulo='Mientras';\r\n                break;\r\n            case 9:\r\n                titulo='Repite';\r\n                break;\r\n            case 10:\r\n                titulo='Condición Si..Entonces';\r\n                break;\r\n            case 11:\r\n                titulo = 'Subrutina';\r\n                break;\r\n            default:\r\n                titulo = 'Ir al origen';\r\n                break;\r\n        } \r\n        setTituloInstruccion(titulo);\r\n    }\r\n\r\n    const gotoMosaicoN = e => {\r\n        setParametron(parseInt(e.target.value, 10));\r\n    }\r\n\r\n    const giraRobot = e => {\r\n        setParametron(parseInt(e.target.value, 10) * 90);\r\n    }\r\n\r\n    const giramosaico = e => {\r\n        setParametron(parseInt(e.target.value, 10) * 90);\r\n    }\r\n\r\n    const avanzaRobot = e => {\r\n        setParametron(parseInt(e.target.value, 10));\r\n    }\r\n\r\n    function validarParametros(){\r\n        let error = false;\r\n        let mensaje = '';\r\n        switch (tipoInstruccion) {\r\n            case 0: //No hay instrucción seleccionada\r\n                error = true;\r\n                mensaje = 'Selecciona la instrucción que deseas agregar';\r\n                break;\r\n            case 1: //No necesita parámetros ir al Origen\r\n                break;\r\n            case 2: //Ir al Mosaico N del almacen ahorita está limitado a 10 mosaicos\r\n                if ((parametron <= 0) || (parametron > 10)){\r\n                    error = true;\r\n                    mensaje = 'Selecciona un mosaico que exista en el almacen';\r\n                }\r\n                break;\r\n            case 3: //Carga mosaico no necesita parámetros\r\n                break;\r\n            case 4: //Descarga mosaicos no necesita parámetros\r\n                break;\r\n            case 5: // Gira Robot necesita parámetros\r\n                if((parametron <= 0)||(parametron > 360)){\r\n                    error = true;\r\n                    mensaje = 'El giro debe ser mayor a 0 grados y menor a 360 grados';\r\n                }\r\n                break;\r\n            case 6: // Gira Mosaico necesita parámetros\r\n                if((parametron <= 0)||(parametron > 360)){\r\n                    error = true;\r\n                    mensaje = 'El giro debe ser mayor a 0 grados y menor a 360 grados';\r\n                }\r\n                break;\r\n            case 7: // Avanza Robot necesita parámetros de numero de casillas\r\n                if((parametron <= 0)||(parametron > 30)){\r\n                    error = true;\r\n                    mensaje = 'El robot solo se puede mover en un valor menor a 30';\r\n                }\r\n                break;\r\n            case 8:\r\n                error = true;\r\n                mensaje = 'La instrucción Mientras no ha sido implementada';\r\n                break;\r\n            case 9:\r\n                error = true;\r\n                mensaje = 'La instrucción Repite no ha sido implementada';\r\n                break;\r\n            case 10:\r\n                error = true;\r\n                mensaje = 'La instrucción IF no ha sido implementada';\r\n                break;\r\n            case 11:\r\n                error = true;\r\n                mensaje = 'La instrucción Subrutina no ha sido implementada';\r\n                break;\r\n            default:\r\n                setErrorinput(true);\r\n                setMensajeerror('Selecciona la instrucción que deseas agregar');\r\n                break;\r\n        }\r\n        setErrorinput(error);\r\n        setMensajeerror(mensaje);\r\n        if(!error){\r\n            let ins = new Instruccionclass(programa.length, tipoInstruccion, parametron);\r\n            agregarInstruccion(ins);\r\n            setnvaInstruccion(false);\r\n        }\r\n    }\r\n    \r\n    return ( \r\n        <Fragment>\r\n            <div className={`${styles.nuevaInstruccion}`}>\r\n                <div>\r\n                   <label className={`${styles.tituloInstruccion}`}>{tituloInstruccion}</label> \r\n                </div>\r\n                <div className={`${styles.tipoinstruccion}`}>\r\n                    <select \r\n                        id='tipoinstruccion' \r\n                        onChange={asignarInstruccion}\r\n                        defaultValue= \"0\">\r\n                        <option value=\"0\">Selecciona la instrucción</option>\r\n                        <option value=\"1\">Origen</option>\r\n                        <option value=\"2\">Mosaico n</option>\r\n                        <option value=\"3\">Carga mosaico</option>\r\n                        <option value=\"4\">Descarga mosaico</option>\r\n                        <option value=\"5\">Gira Robot</option>\r\n                        <option value=\"6\">Gira Mosaico</option>\r\n                        <option value=\"7\">Avanza Robot</option>\r\n                        <option value=\"8\">Mientras</option>\r\n                        <option value=\"9\">Repite</option>\r\n                        <option value=\"10\">Si (condicion) entonces</option>\r\n                        <option value=\"11\">Subrutina</option>\r\n                    </select>\r\n                </div>\r\n                {(2 === tipoInstruccion)?(\r\n                    <select \r\n                    id='mosaicoalmacen' \r\n                    onChange={gotoMosaicoN}\r\n                    defaultValue= \"0\">\r\n                    <option value=\"0\">Selecciona un valor</option>\r\n                    <option value=\"1\">Ir al mosaico 1</option>\r\n                    <option value=\"2\">Ir al mosaico 2</option>\r\n                    <option value=\"3\">Ir al mosaico 3</option>\r\n                    <option value=\"4\">Ir al mosaico 4</option>\r\n                    <option value=\"5\">Ir al mosaico 5</option>\r\n                    <option value=\"6\">Ir al mosaico 6</option>\r\n                    <option value=\"7\">Ir al mosaico 7</option>\r\n                    <option value=\"8\">Ir al mosaico 8</option>\r\n                    <option value=\"9\">Ir al mosaico 9</option>\r\n                    <option value=\"10\">Ir al mosaico 10</option>\r\n                </select>\r\n                )\r\n                :null}\r\n\r\n                {(5 === tipoInstruccion)?(\r\n                    <select \r\n                    id='girarobot' \r\n                    onChange={giraRobot}\r\n                    defaultValue= \"0\">\r\n                    <option value=\"0\">Selecciona un valor</option>\r\n                    <option value=\"1\">Gira Robot 90 grados</option>\r\n                    <option value=\"2\">Gira Robot 180 grados</option>\r\n                    <option value=\"3\">Gira Robot 270 grados</option>\r\n                </select>\r\n                )\r\n                :null}\r\n\r\n                {(6 === tipoInstruccion)?(\r\n                    <select \r\n                    id='giramosaico' \r\n                    onChange={giramosaico}\r\n                    defaultValue= \"0\">  \r\n                    <option value=\"0\">Selecciona un valor</option>\r\n                    <option value=\"1\">Gira el mosaico 90 grados</option>\r\n                    <option value=\"2\">Gira el mosaico 180 grados</option>\r\n                    <option value=\"3\">Gira el mosaico 270 grados</option>\r\n                </select>\r\n                )\r\n                :null}\r\n\r\n                {(7 === tipoInstruccion)?(\r\n                    <select \r\n                    id='avanza' \r\n                    onChange={avanzaRobot}\r\n                    defaultValue= \"0\">\r\n                    <option value=\"0\">Selecciona un valor</option>\r\n                    <option value=\"1\">1 casilla</option>\r\n                    <option value=\"2\">2 casilla</option>\r\n                    <option value=\"3\">3 casilla</option>\r\n                    <option value=\"4\">4 casilla</option>\r\n                    <option value=\"5\">5 casilla</option>\r\n                    <option value=\"6\">6 casilla</option>\r\n                    <option value=\"7\">7 casilla</option>\r\n                    <option value=\"8\">8 casilla</option>\r\n                    <option value=\"9\">9 casilla</option>\r\n                </select>\r\n                )\r\n                :null}\r\n\r\n                <div>\r\n                    {(errorinput) ? <Errorinput mensaje = {mensajeerror} /> : null}\r\n                    <Button\r\n                        type=\"button\"\r\n                        onClick={ () => setnvaInstruccion(false) }\r\n                    >Cancelar</Button>\r\n                    <Button\r\n                        type=\"button\"\r\n                        onClick={ () => validarParametros() }\r\n                    >Aceptar</Button>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default Nuevainstruccion;","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Errorinput.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\context\\programa\\programaState.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\context\\programa\\programaReducer.js",["170"],"\r\nimport { AGREGAR_INSTRUCCION, SET_XX, SET_YY, SET_DIRECCION } from '../../types'; \r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case AGREGAR_INSTRUCCION:\r\n            return {\r\n                ...state,\r\n                programa: [...state.programa, action.payload]\r\n            }\r\n        case SET_XX:\r\n            return {\r\n                ...state,\r\n                xx: action.payload\r\n            }\r\n        case SET_YY:\r\n            return {\r\n                ...state,\r\n                yy: action.payload\r\n            }\r\n        case SET_DIRECCION:\r\n            return {\r\n                ...state,\r\n                direccion: action.payload\r\n            }\r\n        default : return state;\r\n    }\r\n}","D:\\Rodrigo\\react\\mosaicos_magicos\\src\\context\\programa\\programaContext.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Instruccionclass.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Instruccion.js",[],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Robot.js",["171","172","173"],"D:\\Rodrigo\\react\\mosaicos_magicos\\src\\components\\Controlmanual.js",[],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":42,"column":8,"nodeType":"180","endLine":42,"endColumn":10,"suggestions":"181"},{"ruleId":"178","severity":1,"message":"182","line":57,"column":8,"nodeType":"180","endLine":57,"endColumn":24,"suggestions":"183"},{"ruleId":"184","severity":1,"message":"185","line":208,"column":29,"nodeType":"186","endLine":208,"endColumn":53},{"ruleId":"178","severity":1,"message":"187","line":156,"column":8,"nodeType":"180","endLine":156,"endColumn":10,"suggestions":"188"},{"ruleId":"189","severity":1,"message":"190","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":25},{"ruleId":"189","severity":1,"message":"193","line":13,"column":8,"nodeType":"191","messageId":"192","endLine":13,"endColumn":17},{"ruleId":"189","severity":1,"message":"194","line":19,"column":26,"nodeType":"191","messageId":"192","endLine":19,"endColumn":36},{"ruleId":"189","severity":1,"message":"195","line":19,"column":38,"nodeType":"191","messageId":"192","endLine":19,"endColumn":53},{"ruleId":"189","severity":1,"message":"196","line":20,"column":11,"nodeType":"191","messageId":"192","endLine":20,"endColumn":26},{"ruleId":"189","severity":1,"message":"197","line":1,"column":8,"nodeType":"191","messageId":"192","endLine":1,"endColumn":13},{"ruleId":"189","severity":1,"message":"198","line":27,"column":11,"nodeType":"191","messageId":"192","endLine":27,"endColumn":20},{"ruleId":"178","severity":1,"message":"199","line":34,"column":8,"nodeType":"180","endLine":34,"endColumn":10,"suggestions":"200"},{"ruleId":"178","severity":1,"message":"201","line":41,"column":8,"nodeType":"180","endLine":41,"endColumn":25,"suggestions":"202"},{"ruleId":"189","severity":1,"message":"190","line":1,"column":16,"nodeType":"191","messageId":"192","endLine":1,"endColumn":24},{"ruleId":"189","severity":1,"message":"203","line":6,"column":8,"nodeType":"191","messageId":"192","endLine":6,"endColumn":18},{"ruleId":"189","severity":1,"message":"204","line":17,"column":10,"nodeType":"191","messageId":"192","endLine":17,"endColumn":24},{"ruleId":"205","severity":1,"message":"206","line":4,"column":1,"nodeType":"207","endLine":28,"endColumn":2},{"ruleId":"189","severity":1,"message":"208","line":1,"column":27,"nodeType":"191","messageId":"192","endLine":1,"endColumn":35},{"ruleId":"189","severity":1,"message":"209","line":6,"column":8,"nodeType":"191","messageId":"192","endLine":6,"endColumn":14},{"ruleId":"189","severity":1,"message":"210","line":12,"column":30,"nodeType":"191","messageId":"192","endLine":12,"endColumn":41},"no-native-reassign",["211"],"no-negated-in-lhs",["212"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'canvasRef', 'largo', 'separacion', 'setAlmacen', and 'setMosSeleccionado'. Either include them or remove the dependency array.","ArrayExpression",["213"],"React Hook useEffect has missing dependencies: 'almacen', 'alto', 'canvasRef', 'largo', 'separacion', and 'setGuardarAlmacen'. Either include them or remove the dependency array.",["214"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has missing dependencies: 'canvasCollage' and 'limpiaColage'. Either include them or remove the dependency array.",["215"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'PropTypes' is defined but never used.","'separacion' is assigned a value but never used.","'mosSeleccionado' is assigned a value but never used.","'canvasAlmacenes' is assigned a value but never used.","'React' is defined but never used.","'canvasRef' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'eliminartodos'. Either include it or remove the dependency array.",["216"],"React Hook useEffect has a missing dependency: 'setAlmacenCollages'. Either include it or remove the dependency array.",["217"],"'DeleteIcon' is defined but never used.","'nvaInstruccion' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","'Button' is defined but never used.","'interpolate' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},"Update the dependencies array to be: [canvasRef, largo, separacion, setAlmacen, setMosSeleccionado]",{"range":"228","text":"229"},"Update the dependencies array to be: [almacen, alto, canvasRef, guardarAlmacen, largo, separacion, setGuardarAlmacen]",{"range":"230","text":"231"},"Update the dependencies array to be: [canvasCollage, limpiaColage]",{"range":"232","text":"233"},"Update the dependencies array to be: [eliminartodos]",{"range":"234","text":"235"},"Update the dependencies array to be: [almacenCollages, setAlmacenCollages]",{"range":"236","text":"237"},[1910,1912],"[canvasRef, largo, separacion, setAlmacen, setMosSeleccionado]",[2779,2795],"[almacen, alto, canvasRef, guardarAlmacen, largo, separacion, setGuardarAlmacen]",[6970,6972],"[canvasCollage, limpiaColage]",[1336,1338],"[eliminartodos]",[1491,1508],"[almacenCollages, setAlmacenCollages]"]